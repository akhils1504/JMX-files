<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.6" jmeter="2.11 r1554548">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults (Local)" enabled="false">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">bob-sbps-local.netdeposit.com</stringProp>
        <stringProp name="HTTPSampler.port">80</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout">50000</stringProp>
        <stringProp name="HTTPSampler.protocol">http</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults (DevInt)" enabled="false">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">172.16.225.252</stringProp>
        <stringProp name="HTTPSampler.port">8003</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
        <stringProp name="HTTPSampler.protocol">http</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults (QA)" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">172.16.225.63</stringProp>
        <stringProp name="HTTPSampler.port">8003</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
        <stringProp name="HTTPSampler.protocol">http</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Api Key Name" enabled="true">
        <stringProp name="maximumValue">3500</stringProp>
        <stringProp name="minimumValue">1</stringProp>
        <stringProp name="outputFormat">ApiKey_00</stringProp>
        <boolProp name="perThread">true</boolProp>
        <stringProp name="randomSeed"></stringProp>
        <stringProp name="variableName">API_KEY_NAME</stringProp>
      </RandomVariableConfig>
      <hashTree/>
      <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="User Name" enabled="true">
        <stringProp name="maximumValue">200</stringProp>
        <stringProp name="minimumValue">1</stringProp>
        <stringProp name="outputFormat">UserName00</stringProp>
        <boolProp name="perThread">true</boolProp>
        <stringProp name="randomSeed"></stringProp>
        <stringProp name="variableName">USER_NAME</stringProp>
      </RandomVariableConfig>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
      </CookieManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1403905983000</longProp>
        <longProp name="ThreadGroup.end_time">1403905983000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="NO APIKEY HEADER" enabled="true">
          <stringProp name="TestPlan.comments">NO APIKEY HEADER</stringProp>
        </GenericController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Enumerations Using &lt;Login&gt;" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST(GET) enumerations" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;Login xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
&lt;UserName&gt;Gcustomer&lt;/UserName&gt;&#xd;
&lt;Password&gt;pass8&lt;/Password&gt;&#xd;
&lt;/Login&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/enumerations</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">X-HTTP-Method-Override</stringProp>
                    <stringProp name="Header.value">GET</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="setup: Processing Accounts Using &lt;Login&gt;" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST(GET) processingaccounts" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;Login xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
&lt;UserName&gt;Gcustomer&lt;/UserName&gt;&#xd;
&lt;Password&gt;pass8&lt;/Password&gt;&#xd;
&lt;/Login&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sbps/api/processingaccounts?expand=organizationtype,status</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-HTTP-Method-Override</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">PROCESSING_ACCOUNT_ID</stringProp>
              <stringProp name="RegexExtractor.regex">id=&quot;([^&quot;]*)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="setup: Enroll" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST enroll" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;t3ap:EnrollRequest xmlns:t3ap=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
    &lt;t3ap:UserName&gt;Gcustomer&lt;/t3ap:UserName&gt;&#xd;
    &lt;t3ap:Password&gt;pass8&lt;/t3ap:Password&gt;&#xd;
    &lt;t3ap:ApiKeyName&gt;${API_KEY_NAME}&lt;/t3ap:ApiKeyName&gt;&#xd;
    &lt;t3ap:ProcessingAccountId&gt;${PROCESSING_ACCOUNT_ID}&lt;/t3ap:ProcessingAccountId&gt;&#xd;
&lt;/t3ap:EnrollRequest&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/enroll</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">API_KEY</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;ns0:ApiKey.*?\&gt;(.*)&lt;/ns0:ApiKey&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">SESSION_TOKEN</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;ns0:SessionToken.*?\&gt;(.*)&lt;/ns0:SessionToken&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Enroll" enabled="false">
            <stringProp name="TestPlan.comments">Since POST and DELETE are tested as part of setup and cleanup we only test PUT here.</stringProp>
          </GenericController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET token" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/token</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">X-TT-APIKEY</stringProp>
                    <stringProp name="Header.value">${API_KEY}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT enroll" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;t3ap:EnrollRequest xmlns:t3ap=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
    &lt;t3ap:UserName&gt;punetest&lt;/t3ap:UserName&gt;&#xd;
    &lt;t3ap:Password&gt;pass1&lt;/t3ap:Password&gt;&#xd;
    &lt;t3ap:ApiKeyName&gt;${API_KEY_NAME}1&lt;/t3ap:ApiKeyName&gt;&#xd;
    &lt;t3ap:ProcessingAccountId&gt;${PROCESSING_ACCOUNT_ID}&lt;/t3ap:ProcessingAccountId&gt;&#xd;
    &lt;t3ap:ApiKey&gt;${API_KEY}&lt;/t3ap:ApiKey&gt;&#xd;
&lt;/t3ap:EnrollRequest&gt;&#xd;
&#xd;
&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/enroll</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">X-TT-APIKEY</stringProp>
                    <stringProp name="Header.value">${API_KEY}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">X-TT-SESSIONTOKEN</stringProp>
                    <stringProp name="Header.value">${SESSIONTOKEN}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="WITH APIKEY" enabled="true"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-TT-APIKEY</stringProp>
                <stringProp name="Header.value">${API_KEY}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-TT-SESSIONTOKEN</stringProp>
                <stringProp name="Header.value">${SESSION_TOKEN}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Get_processing_accounts" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET processingaccounts" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/processingaccounts</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Payment Accounts" enabled="false"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET paymentaccounts" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sbps/api/paymentaccounts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">CREDIT_CARD_PAYMENT_ACCOUNT_ID</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;ns0:CreditCardPaymentAccount id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">ACH_PAYMENT_ACCOUNT_ID</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;ns0:AchPaymentAccount id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET creditcardpaymentaccount" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sbps/api/creditcardpaymentaccount/${__urlencode(${CREDIT_CARD_PAYMENT_ACCOUNT_ID})}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Customers" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Post customer" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;Customer xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
&lt;FirstName&gt;Suman kumar&lt;/FirstName&gt;&#xd;
&lt;LastName&gt;CUSTOMER&lt;/LastName&gt;&#xd;
&lt;Street1&gt;5800 NW 39th AVE&lt;/Street1&gt;&#xd;
&lt;City&gt;Gainesville&lt;/City&gt;&#xd;
&lt;State&gt;FL&lt;/State&gt;&#xd;
&lt;Zip&gt;32606&lt;/Zip&gt;&#xd;
&lt;Country&gt;US&lt;/Country&gt;&#xd;
&lt;PhoneNumber&gt;+1-207-588-1100&lt;/PhoneNumber&gt;&#xd;
&lt;EmailAddress&gt;sagar.mandwe@fundtech.com&lt;/EmailAddress&gt;&#xd;
&lt;/Customer&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">sbps/api/customer</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Customer ID Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">CUSTOMER_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;Customer id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Customer ID Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">CUSTOMER_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;Customer id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="First name Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">CUSTOMER_FIRSTNAME</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;FirstName&gt;(.*)(&lt;/FirstName&gt;)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Last Name Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">CUSTOMER_LASTNAME</stringProp>
                <stringProp name="RegexExtractor.regex">(?s)(${CUSTOMER_FIRSTNAME})&lt;/FirstName&gt;?\s*&lt;LastName&gt;?(.*)&lt;/LastName&gt;?</stringProp>
                <stringProp name="RegexExtractor.template">$2$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">true</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Post customer" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">  &lt;Customer xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
 &lt;FirstName&gt;smith Customer&lt;/FirstName&gt;&#xd;
 &lt;LastName&gt;fundtech&lt;/LastName&gt;&#xd;
 &lt;BusinessName&gt;testing&lt;/BusinessName&gt;&#xd;
 &lt;Street1&gt;5800 NW 39th AVE&lt;/Street1&gt;&#xd;
 &lt;City&gt;Gainesville&lt;/City&gt;&#xd;
 &lt;State&gt;FL&lt;/State&gt;&#xd;
 &lt;Zip&gt;32606&lt;/Zip&gt;&#xd;
 &lt;Country&gt;US&lt;/Country&gt;&#xd;
 &lt;PhoneNumber&gt;5858585888&lt;/PhoneNumber&gt;&#xd;
 &lt;EmailAddress&gt;sagar.mandwe@fundtech.com&lt;/EmailAddress&gt;&#xd;
 &lt;CustomerType id=&quot;QDGfoL8MVLK8A49qup7O2vW1kILuFE2Eq@@@mN2A2Ry675uafX0s7TLwl4yqMSsQ0f&quot;&gt;&lt;/CustomerType&gt;&#xd;
 &lt;/Customer&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">sbps/api/customer</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Customer ID Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">CUSTOMER_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;Customer id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Customer ID Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">CUSTOMER_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;Customer id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="First name Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">CUSTOMER_FIRSTNAME</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;FirstName&gt;(.*)(&lt;/FirstName&gt;)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Last Name Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">CUSTOMER_LASTNAME</stringProp>
                <stringProp name="RegexExtractor.regex">(?s)(${CUSTOMER_FIRSTNAME})&lt;/FirstName&gt;?\s*&lt;LastName&gt;?(.*)&lt;/LastName&gt;?</stringProp>
                <stringProp name="RegexExtractor.template">$2$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">true</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET customers" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/customers/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Customer ID Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">CUSTOMER_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;Customer id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="First name Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">CUSTOMER_FIRSTNAME</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;FirstName&gt;(.*)(&lt;/FirstName&gt;)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Last Name Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">CUSTOMER_LASTNAME</stringProp>
                <stringProp name="RegexExtractor.regex">(?s)(${CUSTOMER_FIRSTNAME})&lt;/FirstName&gt;?\s*&lt;LastName&gt;?(.*)&lt;/LastName&gt;?</stringProp>
                <stringProp name="RegexExtractor.template">$2$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">true</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET customer" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/customer/${__urlencode(${CUSTOMER_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete customer" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/customer/${__urlencode(${CUSTOMER_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET customers subcollection" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="filter" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">firstName:${CUSTOMER_FIRSTNAME},lastName:${CUSTOMER_LASTNAME}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">filter</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/customers/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Credit Card Payment Accounts" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET customers" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/customers/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Customer ID Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">CUSTOMER_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;ns0:Customer id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="First name Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">CUSTOMER_FIRSTNAME</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;FirstName&gt;(.*)(&lt;/FirstName&gt;)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Last Name Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">CUSTOMER_LASTNAME</stringProp>
                <stringProp name="RegexExtractor.regex">(?s)(${CUSTOMER_FIRSTNAME})&lt;/FirstName&gt;?\s*&lt;LastName&gt;?(.*)&lt;/LastName&gt;?</stringProp>
                <stringProp name="RegexExtractor.template">$2$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">true</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET creditcardpaymentaccounts" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpaymentaccounts</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET creditcardpaymentaccount" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpaymentaccount/${__urlencode(${CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST creditcardpaymentaccount" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPaymentAccount xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
      &lt;Name&gt;kumar 234&lt;/Name&gt;&#xd;
      &lt;CardNumber&gt;4111111111111111&lt;/CardNumber&gt;&#xd;
      &lt;LastFour&gt;1111&lt;/LastFour&gt;&#xd;
      &lt;ExpiredDate&gt;2018-12-31T00:00:00.000Z&lt;/ExpiredDate&gt;&#xd;
      &lt;Default&gt;true&lt;/Default&gt;&#xd;
      &lt;ExternalId&gt;123dqwasd2&lt;/ExternalId&gt;&#xd;
      &lt;AuditUserId&gt;12345&lt;/AuditUserId&gt;&#xd;
      &lt;NameOnCard&gt;naman Kumar&lt;/NameOnCard&gt;&#xd;
      &lt;Customer id=&apos;${CUSTOMER_ID}&apos;&gt;&lt;/Customer&gt;&#xd;
      &lt;CreditCardType id=&quot;p30JQBweOKuZceZ18ML46Z8DU6NeQqG9w75FTVSCKAdJEArvIdvsKdRuBCMrbVBp&quot;&gt;       &#xd;
      &lt;Code&gt;VISA&lt;/Code&gt; &#xd;
      &lt;Name&gt;VISA&lt;/Name&gt;       &#xd;
      &lt;Description&gt;VISA&lt;/Description&gt;       &#xd;
      &lt;Active&gt;true&lt;/Active&gt;       &#xd;
      &lt;SortOrder&gt;0&lt;/SortOrder&gt;     &#xd;
      &lt;/CreditCardType&gt;     &#xd;
      &lt;BillingAddressStreet&gt;5800 NW 39th AVE&lt;/BillingAddressStreet&gt;&#xd;
      &lt;BillingAddressUnit&gt;5800 NW 39th AVE&lt;/BillingAddressUnit&gt;&#xd;
      &lt;BillingCity&gt;Gainesville&lt;/BillingCity&gt;&#xd;
      &lt;BillingState&gt;FL&lt;/BillingState&gt;&#xd;
      &lt;BillingZip&gt;32606&lt;/BillingZip&gt;&#xd;
      &lt;BillingCountry&gt;US&lt;/BillingCountry&gt;&#xd;
      &lt;/CreditCardPaymentAccount&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpaymentaccount</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_CREDIT_CARD_PAYMENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;ns0:CreditCardPaymentAccount .* id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpaymentaccount" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPaymentAccount xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot; id=&quot;${NEW_CREDIT_CARD_PAYMENT_ID}&quot;&gt;&lt;Name&gt;damant kumar&lt;/Name&gt; &#xd;
&lt;CardNumber&gt;5454545454545454&lt;/CardNumber&gt;&#xd;
&lt;LastFour&gt;5454&lt;/LastFour&gt; &#xd;
&lt;ExpiredDate&gt;2016-12-31T00:00:00.000Z&lt;/ExpiredDate&gt;&#xd;
&lt;Default&gt;false&lt;/Default&gt; &#xd;
&lt;ExternalId&gt;123dqwasd2&lt;/ExternalId&gt;&#xd;
&lt;AuditUserId&gt;12345&lt;/AuditUserId&gt;&#xd;
&lt;NameOnCard&gt;Credit kumar&lt;/NameOnCard&gt; &#xd;
&lt;Customer id=&apos;${CUSTOMER_ID}&apos;&gt;&lt;/Customer&gt; &#xd;
&lt;CreditCardType&gt; &#xd;
&lt;Code&gt;MC&lt;/Code&gt;&#xd;
&lt;Name&gt;MasterCard&lt;/Name&gt;&#xd;
&lt;Description&gt;AmericanExpress&lt;/Description&gt;&#xd;
&lt;SortOrder&gt;0&lt;/SortOrder&gt;&#xd;
&lt;/CreditCardType&gt; &#xd;
&lt;BillingAddressStreet&gt;AVE&lt;/BillingAddressStreet&gt;&#xd;
&lt;BillingCity&gt;Gainesville&lt;/BillingCity&gt;&#xd;
&lt;BillingState&gt;FL&lt;/BillingState&gt;&#xd;
&lt;BillingZip&gt;32606&lt;/BillingZip&gt;&#xd;
&lt;BillingCountry&gt;US&lt;/BillingCountry&gt;&#xd;
&lt;/CreditCardPaymentAccount&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpaymentaccount/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE creditcardpaymentaccount" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpaymentaccount/${NEW_CREDIT_CARD_PAYMENT_ID}</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Credit Card Payments" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET customers" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/customers/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Customer ID Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">CUSTOMER_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;Customer id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="First name Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">CUSTOMER_FIRSTNAME</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;FirstName&gt;(.*)(&lt;/FirstName&gt;)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Last Name Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">CUSTOMER_LASTNAME</stringProp>
                <stringProp name="RegexExtractor.regex">(?s)(${CUSTOMER_FIRSTNAME})&lt;/FirstName&gt;?\s*&lt;LastName&gt;?(.*)&lt;/LastName&gt;?</stringProp>
                <stringProp name="RegexExtractor.template">$2$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET creditcardpayments" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayments</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
                <stringProp name="RegexExtractor.refname">CREDIT_CARD_PAYMENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;CreditCardPayment id=&quot;(.*)&quot; href=&quot;.*&quot;&gt; </stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
                <stringProp name="Scope.variable">CREDIT_CARD_PAYMENT_ID</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_CREDIT_CARD_PAYMENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;CreditCardPayment id=&quot;(.*)&quot; href=&quot;.*&quot;&gt; </stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
                <stringProp name="Scope.variable">CREDIT_CARD_PAYMENT_ID</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST creditcardpayment WithoutCustomFields" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
                &lt;Amount&gt;13.45&lt;/Amount&gt;                &#xd;
                &lt;EmailNotes&gt;Memo to be tested on UI&lt;/EmailNotes&gt;&#xd;
                &lt;InvoiceNumber&gt;OLX12345CC&lt;/InvoiceNumber&gt;&#xd;
                &lt;PaymentDate&gt;2016-11-24T21:34:55.000Z&lt;/PaymentDate&gt;&#xd;
                &lt;PoNumber&gt;CC12345OLX&lt;/PoNumber&gt;&#xd;
                &lt;ReportNotes&gt;Notes to be tested on UI&lt;/ReportNotes&gt;&#xd;
                &lt;TaxAmount&gt;1.00&lt;/TaxAmount&gt;&#xd;
                &lt;CreditCardId&gt;1001000000005071&lt;/CreditCardId&gt;&#xd;
                &lt;CreditCardPaymentAccount id=&quot;NNYurL1vTLDWxb1Kbe8uWtctTXdpfvlIZYsAgjoH3LUVcRzSI1BRMO9D0BdJl6!!!KKujf5G33KwU=&quot;/&gt;&#xd;
                &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
                &lt;Cvv&gt;999&lt;/Cvv&gt;&#xd;
                &lt;ExpirationDate&gt;2019-12-31T00:00:00.000Z&lt;/ExpirationDate&gt;&#xd;
                &lt;NameOnCard&gt;Chaney Music&lt;/NameOnCard&gt;                     &#xd;
&lt;/CreditCardPayment&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_CREDIT_CARD_PAYMENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;CreditCardPayment .* id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST creditcardpayment WithCustomFields" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
                &lt;Amount&gt;12.45&lt;/Amount&gt;  &#xd;
                &lt;CustomDataFields&gt;&#xd;
                                &lt;CustomDataField&gt;&#xd;
                                                &lt;Name&gt;Custom Field One&lt;/Name&gt;&#xd;
                                                &lt;Value&gt;Custom Field one tested on UI&lt;/Value&gt;&#xd;
                                &lt;/CustomDataField&gt;&#xd;
                                &lt;CustomDataField&gt;&#xd;
                                                &lt;Name&gt;Custom Field Two&lt;/Name&gt;&#xd;
                                                &lt;Value&gt;Custom Field two tested on UI&lt;/Value&gt;&#xd;
                                &lt;/CustomDataField&gt;&#xd;
                                &lt;CustomDataField&gt;&#xd;
                                                &lt;Name&gt;Custom Field Three&lt;/Name&gt;&#xd;
                                                &lt;Value&gt;Custom Field three tested on UI&lt;/Value&gt;&#xd;
                                &lt;/CustomDataField&gt;&#xd;
                                &lt;CustomDataField&gt;&#xd;
                                                &lt;Name&gt;Custom Field Four&lt;/Name&gt;&#xd;
                                                &lt;Value&gt;Custom Field Four tested on UI&lt;/Value&gt;&#xd;
                                &lt;/CustomDataField&gt;&#xd;
                                &lt;CustomDataField&gt;&#xd;
                                                &lt;Name&gt;Custom Field Five&lt;/Name&gt;&#xd;
                                                &lt;Value&gt;Custom Field Five tested on UI&lt;/Value&gt;&#xd;
                                &lt;/CustomDataField&gt;&#xd;
                                &lt;CustomDataField&gt;&#xd;
                                                &lt;Name&gt;Custom Field Six&lt;/Name&gt;&#xd;
                                                &lt;Value&gt;Custom Field Six tested on UI&lt;/Value&gt;&#xd;
                                &lt;/CustomDataField&gt;&#xd;
                                &lt;CustomDataField&gt;&#xd;
                                                &lt;Name&gt;Custom Field Seven&lt;/Name&gt;&#xd;
                                                &lt;Value&gt;Custom Field Seven tested on UI&lt;/Value&gt;&#xd;
                                &lt;/CustomDataField&gt;&#xd;
                                &lt;CustomDataField&gt;&#xd;
                                                &lt;Name&gt;Custom Field Eight&lt;/Name&gt;&#xd;
                                                &lt;Value&gt;Custom Field Eight tested on UI&lt;/Value&gt;&#xd;
                                &lt;/CustomDataField&gt;&#xd;
                                &lt;CustomDataField&gt;&#xd;
                                                &lt;Name&gt;Custom Field Nine&lt;/Name&gt;&#xd;
                                                &lt;Value&gt;Custom Field Nine tested on UI&lt;/Value&gt;&#xd;
                                &lt;/CustomDataField&gt;&#xd;
                                &lt;CustomDataField&gt;&#xd;
                                                &lt;Name&gt;Custom Field Ten&lt;/Name&gt;&#xd;
                                                &lt;Value&gt;Custom Field ten tested on UI&lt;/Value&gt;&#xd;
                                &lt;/CustomDataField&gt;&#xd;
              &lt;/CustomDataFields&gt;              &#xd;
                &lt;EmailNotes&gt;Memo to be tested on UI&lt;/EmailNotes&gt;&#xd;
                &lt;InvoiceNumber&gt;OLX12345CC&lt;/InvoiceNumber&gt;&#xd;
                &lt;PaymentDate&gt;2016-11-24T21:34:55.000Z&lt;/PaymentDate&gt;&#xd;
                &lt;PoNumber&gt;CC12345OLX&lt;/PoNumber&gt;&#xd;
                &#xd;
                &lt;ReportNotes&gt;Notes to be tested on UI&lt;/ReportNotes&gt;&#xd;
                &lt;TaxAmount&gt;1.00&lt;/TaxAmount&gt;&#xd;
                &lt;CreditCardId&gt;1001000000005071&lt;/CreditCardId&gt;&#xd;
                &lt;CreditCardPaymentAccount id=&quot;NNYurL1vTLDWxb1Kbe8uWtctTXdpfvlIZYsAgjoH3LUVcRzSI1BRMO9D0BdJl6!!!KKujf5G33KwU=&quot;/&gt;&#xd;
                &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
                &lt;Cvv&gt;999&lt;/Cvv&gt;&#xd;
                &lt;ExpirationDate&gt;2019-12-31T00:00:00.000Z&lt;/ExpirationDate&gt;&#xd;
                &lt;NameOnCard&gt;Chaney Music&lt;/NameOnCard&gt;                     &#xd;
&lt;/CreditCardPayment&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_CREDIT_CARD_PAYMENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;CreditCardPayment .* id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
                &lt;Amount&gt;91.55&lt;/Amount&gt;&#xd;
                &lt;CreditCardId&gt;1001000000005071&lt;/CreditCardId&gt;&#xd;
                &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
                &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
                &lt;Cvv&gt;999&lt;/Cvv&gt;&#xd;
                &lt;ExpirationDate&gt;2019-12-31T00:00:00.000Z&lt;/ExpirationDate&gt;&#xd;
                &lt;NameOnCard&gt;Chaney Music&lt;/NameOnCard&gt;                     &#xd;
&lt;/CreditCardPayment&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_CREDIT_CARD_PAYMENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;CreditCardPayment .* id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST creditcardpayment level 3 data" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
  &lt;Amount&gt;174.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2016-03-23T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0YsH90MJdXBftpkOZrl@@@iDqCVrIPI6C2llT&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_CREDIT_CARD_PAYMENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;CreditCardPayment .* id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST creditcardpayment level 3 data for lineitem" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;140.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-07T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000006&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;5&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Hand&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;12&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;0&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000007&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 2&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;122&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;2&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Squares&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;8&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;2&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;5&lt;/DiscountRate&gt;&#xd;
      &lt;Amount&gt;13.30&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000008&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 3&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;123&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;1&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;cm&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;53.50&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;12&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;22&lt;/DiscountRate&gt;&#xd;
      &lt;Amount&gt;32.37&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
  &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_CREDIT_CARD_PAYMENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;CreditCardPayment id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;140.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-07T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000007&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;5&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Hand&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;12&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;0&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000007&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 2&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;122&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;2&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Squares&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;8&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;2&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;5&lt;/DiscountRate&gt;&#xd;
      &lt;Amount&gt;13.30&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000008&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 3&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;123&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;1&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;cm&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;53.50&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;12&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;22&lt;/DiscountRate&gt;&#xd;
      &lt;Amount&gt;32.37&lt;/Amount&gt;&#xd;
     &lt;/PaymentLvl3Item&gt;&#xd;
  &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;nWYWD6ut5YqI4Xmvk9KOzHSzB16RrIFt1BwKwbbi!!!r0nECSOD4Tt3RZIbIwxL2RJ&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/nWYWD6ut5YqI4Xmvk9KOzHSzB16RrIFt1BwKwbbi!!!r0nECSOD4Tt3RZIbIwxL2RJ</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
&lt;Amount&gt;102.33&lt;/Amount&gt;&#xd;
&lt;InvoiceNumber&gt;D04981131&lt;/InvoiceNumber&gt;&#xd;
&lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
&#xd;
&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete creditcardpayment" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot; id=&quot;${NEW_CREDIT_CARD_PAYMENT_ID}&quot;&gt;&#xd;
       &lt;Amount&gt;555.55&lt;/Amount&gt;&#xd;
                &lt;CreditCardId&gt;1001000000005071&lt;/CreditCardId&gt;&#xd;
                &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
                &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
                &lt;Cvv&gt;999&lt;/Cvv&gt;&#xd;
                &lt;ExpirationDate&gt;2015-12-31T00:00:00.000Z&lt;/ExpirationDate&gt;&#xd;
                &lt;NameOnCard&gt;ACJMOFRXDFXOXQIDN CC&lt;/NameOnCard&gt;                     &#xd;
&lt;/CreditCardPayment&gt;&#xd;
&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST creditcardpayment level 3 data" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-14T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0YsH90MJdXBftpkOZrl@@@iDqCVrIPI6C2llT&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_CREDIT_CARD_PAYMENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;CreditCardPayment id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST creditcardpayment level 3 data" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
  &lt;Amount&gt;190.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
 &lt;PaymentDate&gt;2015-01-14T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0YsH90MJdXBftpkOZrl@@@iDqCVrIPI6C2llT&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_CREDIT_CARD_PAYMENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;CreditCardPayment id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST creditcardpayment level 3 data" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
  &lt;Amount&gt;190.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;InvoiceNumber&gt;D04981131&lt;/InvoiceNumber&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-14T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0YsH90MJdXBftpkOZrl@@@iDqCVrIPI6C2llT&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_CREDIT_CARD_PAYMENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;CreditCardPayment id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST creditcardpayment level 3 data" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;140.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-14T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000006&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;5&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Hand&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;12&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;0&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
  &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0YsH90MJdXBftpkOZrl@@@iDqCVrIPI6C2llT&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
&#xd;
&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_CREDIT_CARD_PAYMENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;CreditCardPayment id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST creditcardpayment level 3 data" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;140.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-14T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000010&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;5&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Hand&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;12&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;0&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000011&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 2&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;122&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;2&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Squares&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;8&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;2&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;5&lt;/DiscountRate&gt;&#xd;
      &lt;Amount&gt;13.30&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000012&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 3&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;123&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;1&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;cm&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;53.50&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;12&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;22&lt;/DiscountRate&gt;&#xd;
      &lt;Amount&gt;32.37&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
  &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0YsH90MJdXBftpkOZrl@@@iDqCVrIPI6C2llT&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
&#xd;
&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_CREDIT_CARD_PAYMENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;CreditCardPayment id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST creditcardpayment level 3 data" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;140.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-14T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000006&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;5&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Hand&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;12&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;0&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;55.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
  &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0YsH90MJdXBftpkOZrl@@@iDqCVrIPI6C2llT&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_CREDIT_CARD_PAYMENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;CreditCardPayment id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST creditcardpayment level 3 data" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
  &lt;Amount&gt;190.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-14T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0YsH90MJdXBftpkOZrl@@@iDqCVrIPI6C2llT&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_CREDIT_CARD_PAYMENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;CreditCardPayment id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST creditcardpayment level 3 data" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
  &lt;Amount&gt;190.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-14T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0YsH90MJdXBftpkOZrl@@@iDqCVrIPI6C2llT&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_CREDIT_CARD_PAYMENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;CreditCardPayment id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST creditcardpayment level 3 data" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
  &lt;Amount&gt;190.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-14T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0YsH90MJdXBftpkOZrl@@@iDqCVrIPI6C2llT&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_CREDIT_CARD_PAYMENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;CreditCardPayment id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST creditcardpayment level 3 data" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
  &lt;Amount&gt;190.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-14T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0YsH90MJdXBftpkOZrl@@@iDqCVrIPI6C2llT&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_CREDIT_CARD_PAYMENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;CreditCardPayment id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST creditcardpayment level 3 data" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
  &lt;Amount&gt;190.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-14T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0YsH90MJdXBftpkOZrl@@@iDqCVrIPI6C2llT&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_CREDIT_CARD_PAYMENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;CreditCardPayment id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST creditcardpayment level 3 data" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
  &lt;Amount&gt;190.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-14T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0YsH90MJdXBftpkOZrl@@@iDqCVrIPI6C2llT&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_CREDIT_CARD_PAYMENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;CreditCardPayment id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST creditcardpayment level 3 data" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
  &lt;Amount&gt;190.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-14T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0YsH90MJdXBftpkOZrl@@@iDqCVrIPI6C2llT&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_CREDIT_CARD_PAYMENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;CreditCardPayment id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST creditcardpayment level 3 data" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
  &lt;Amount&gt;190.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-14T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0YsH90MJdXBftpkOZrl@@@iDqCVrIPI6C2llT&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_CREDIT_CARD_PAYMENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;CreditCardPayment id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST creditcardpayment level 3 data" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
  &lt;Amount&gt;190.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-14T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0YsH90MJdXBftpkOZrl@@@iDqCVrIPI6C2llT&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_CREDIT_CARD_PAYMENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;CreditCardPayment id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST creditcardpayment level 3 data" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
  &lt;Amount&gt;190.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-14T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0YsH90MJdXBftpkOZrl@@@iDqCVrIPI6C2llT&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_CREDIT_CARD_PAYMENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;CreditCardPayment id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST creditcardpayment level 3 data" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
  &lt;Amount&gt;190.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-14T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0YsH90MJdXBftpkOZrl@@@iDqCVrIPI6C2llT&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_CREDIT_CARD_PAYMENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;CreditCardPayment id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST creditcardpayment level 3 data" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
  &lt;Amount&gt;190.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-14T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0YsH90MJdXBftpkOZrl@@@iDqCVrIPI6C2llT&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_CREDIT_CARD_PAYMENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;CreditCardPayment id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
  &lt;Amount&gt;153.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-14T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;B1@@@ZZ4kSt6nV12mPsEwuni2lgWX0QVvT4UxK4ce6XQMvdJMOAPtLmhpl1BCYQQ2@@@&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/B1@@@ZZ4kSt6nV12mPsEwuni2lgWX0QVvT4UxK4ce6XQMvdJMOAPtLmhpl1BCYQQ2@@@</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-15T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
  &lt;Amount&gt;153.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-14T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;9999999.99&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-14T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000009&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;5&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Hand&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;12&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;0&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;0.00&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-14T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000009&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;5&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Hand&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;12&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;0&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;testing&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-14T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000009&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;5&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Hand&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;12&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;0&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;12.36666666&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-14T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000009&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;5&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Hand&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;12&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;0&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;140.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;999999.99&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-14T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000009&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;5&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Hand&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;12&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;0&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;140.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;test&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-14T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000009&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;5&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Hand&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;12&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;0&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;140.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;999.99&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-14T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000009&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;5&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Hand&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;12&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;0&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;999999.99&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;140.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;PKG&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-14T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000009&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;5&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Hand&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;12&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;0&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;140.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;999999.99&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-14T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000009&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;5&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Hand&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;12&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;0&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;140.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;pest&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-14T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000009&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;5&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Hand&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;12&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;0&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;140.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-14T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;1000000912535&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;5&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Hand&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;12&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;0&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;140.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-14T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;1000003&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;5&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Hand&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;12&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;0&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;140.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-15T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000009&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;1211452896355&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;5&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Hand&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;12&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;0&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;140.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-15T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000009&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;5&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Hand&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;12&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;0&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;140.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-15T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000009&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121ZSAaAA&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;5&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Hand&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;12&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;0&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;140.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-15T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000009&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;999999.99&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Hand&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;12&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;0&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;140.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-15T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000009&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;0.000005&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Hand&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;12&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;0&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;140.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-15T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000009&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Hand&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;12&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;0&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;140.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-15T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000009&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;0.05&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;12&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;0&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;140.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-15T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000009&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;0.05&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Hand&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;999999.99&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;0&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;140.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-15T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000009&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;0.05&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;0.006&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;0&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;140.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-15T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000009&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;0.005&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Hand456456654646546546&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;999999.99&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;99.99&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;0&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;140.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-15T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000009&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;0.005&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Hand&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;0.00000006&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;0.005&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;0&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;140.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;20.99&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-15T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000009&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;5&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Hand&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;12&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;9999999.99&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;140.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;20.99&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-15T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000009&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;5&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Hand&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;12&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;140.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;99.99&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-15T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000009&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;5&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Hand&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;12&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;testing&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;140.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-15T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000010&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;5&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Hand&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;12&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;0&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000011&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 2&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;122&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;2&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Squares&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;8&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;2&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;5&lt;/DiscountRate&gt;&#xd;
      &lt;Amount&gt;13.30&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000012&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 3&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;123&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;1&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;cm&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;53.50&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;12&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;22&lt;/DiscountRate&gt;&#xd;
      &lt;Amount&gt;32.37&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000013&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 2&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;122&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;2&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Squares&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;8&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;2&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;5&lt;/DiscountRate&gt;&#xd;
      &lt;Amount&gt;13.30&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000014&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 2&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;122&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;2&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Squares&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;8&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;2&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;5&lt;/DiscountRate&gt;&#xd;
      &lt;Amount&gt;13.30&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000015&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 2&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;122&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;2&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Squares&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;8&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;2&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;5&lt;/DiscountRate&gt;&#xd;
      &lt;Amount&gt;13.30&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000016&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 2&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;122&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;2&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Squares&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;8&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;2&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;5&lt;/DiscountRate&gt;&#xd;
      &lt;Amount&gt;13.30&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000017&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 2&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;122&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;2&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Squares&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;8&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;2&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;5&lt;/DiscountRate&gt;&#xd;
      &lt;Amount&gt;13.30&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000018&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 2&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;122&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;2&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Squares&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;8&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;2&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;5&lt;/DiscountRate&gt;&#xd;
      &lt;Amount&gt;13.30&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000019&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 2&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;122&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;2&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Squares&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;8&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;2&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;5&lt;/DiscountRate&gt;&#xd;
      &lt;Amount&gt;13.30&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000020&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 2&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;122&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;2&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Squares&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;8&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;2&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;5&lt;/DiscountRate&gt;&#xd;
      &lt;Amount&gt;13.30&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000021&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 2&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;122&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;2&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Squares&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;8&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;2&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;5&lt;/DiscountRate&gt;&#xd;
      &lt;Amount&gt;13.30&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000022&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 2&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;122&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;2&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Squares&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;8&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;2&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;5&lt;/DiscountRate&gt;&#xd;
      &lt;Amount&gt;13.30&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000022&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 2&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;122&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;2&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Squares&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;8&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;2&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;5&lt;/DiscountRate&gt;&#xd;
      &lt;Amount&gt;13.30&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000023&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 2&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;122&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;2&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Squares&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;8&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;2&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;5&lt;/DiscountRate&gt;&#xd;
      &lt;Amount&gt;13.30&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000024&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 2&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;122&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;2&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Squares&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;8&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;2&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;5&lt;/DiscountRate&gt;&#xd;
      &lt;Amount&gt;13.30&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000025&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 2&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;122&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;2&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Squares&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;8&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;2&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;5&lt;/DiscountRate&gt;&#xd;
      &lt;Amount&gt;13.30&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000026&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 2&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;122&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;2&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Squares&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;8&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;2&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;5&lt;/DiscountRate&gt;&#xd;
      &lt;Amount&gt;13.30&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000027&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 2&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;122&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;2&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Squares&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;8&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;2&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;5&lt;/DiscountRate&gt;&#xd;
      &lt;Amount&gt;13.30&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000028&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 2&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;122&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;2&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Squares&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;8&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;2&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;5&lt;/DiscountRate&gt;&#xd;
      &lt;Amount&gt;13.30&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
  &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;amex 133923893212893213892138921321893189233891319831313231313213131232131313213131313131&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;133923893212893213892138921321893189233891319831313231313213131232131313213131313131&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;133923893212893213892138921321893189233891319831313231313213131232131313213131313131&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;133923893212893213892138921321893189233891319831313231313213131232131313213131313131&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;140.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;99.99&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-15T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000009&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;5&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Hand&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;12&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;test&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;test2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;test3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;test5&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;140.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;99.99&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-15T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000009&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1testststststststststststststtstststststst &lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;5&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Hand&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;12&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;10&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
 &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;140.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;99.99&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;2015-01-15T23:59:00.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000009&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;5&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Hand&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;12&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;10&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;3432423&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;20.00/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Post CAP" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Post Cap CC" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;CustomerAccountPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
&lt;Customer&gt;&#xd;
&lt;FirstName&gt;naman&lt;/FirstName&gt;&#xd;
&lt;LastName&gt;Doe&lt;/LastName&gt;&#xd;
&lt;Street1&gt;5800 NW 39th AVE&lt;/Street1&gt;&#xd;
&lt;City&gt;Gainesville&lt;/City&gt;&#xd;
&lt;Zip&gt;32606&lt;/Zip&gt;&#xd;
&lt;Country&gt;US&lt;/Country&gt;&#xd;
&lt;PhoneNumber&gt;8011235455&lt;/PhoneNumber&gt;&#xd;
&lt;EmailAddress&gt;sagar.mandwe@fundtech.com&lt;/EmailAddress&gt;&#xd;
&lt;/Customer&gt;&#xd;
&lt;CreditCardPaymentAccount&gt;&#xd;
&lt;Name&gt;My Visa Card&lt;/Name&gt;&#xd;
&lt;CardNumber&gt;4111111111111111&lt;/CardNumber&gt;&#xd;
&lt;ExpiredDate&gt;2019-10-25T21:32:52&lt;/ExpiredDate&gt;&#xd;
&lt;NameOnCard&gt;Joe Doe&lt;/NameOnCard&gt;&#xd;
&lt;/CreditCardPaymentAccount&gt;&#xd;
&lt;CreditCardPayments&gt;&#xd;
&lt;CreditCardPayment&gt;&#xd;
&lt;Amount&gt;75.80&lt;/Amount&gt;&#xd;
&lt;/CreditCardPayment&gt;&#xd;
&lt;/CreditCardPayments&gt;&#xd;
&lt;/CustomerAccountPayment&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/cap</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Get CAP" enabled="false">
            <stringProp name="TestPlan.comments">Customer, Account, Payment</stringProp>
          </GenericController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Conditionally Get a CREDIT_CARD_PAYMENT_ID" enabled="true">
              <stringProp name="IfController.condition">&quot;${CREDIT_CARD_PAYMENT_ID}&quot; == &quot;\${CREDIT_CARD_PAYMENT_ID}&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="-1948168983">Thread Group</stringProp>
                  <stringProp name="-1391368842">Credit Card Payments</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Conditionally Get an ACH_PAYMENT_ID" enabled="true">
              <stringProp name="IfController.condition">&quot;${ACH_PAYMENT_ID}&quot; == &quot;\${ACH_PAYMENT_ID}&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="-1948168983">Thread Group</stringProp>
                  <stringProp name="-1523292729">Ach Payments</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET Credit Card Cap" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/cap/${CREDIT_CARD_PAYMENT_ID}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Customer Account Payment</stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET Credit Card Caps Filtered " enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="fields" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">CustomerAccountPayment(Customer(firstName lastName) CreditCardPaymentAccount(name) CreditCardPayment(amount))</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">fields</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/caps</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Customer Account Payment</stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET Credit Card Caps" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/caps</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Customer Account Payment</stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Custom Field" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET customfields" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/customfields</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">CUSTOM_FIELD_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;CustomDataField id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET customfield" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/customfield/${CUSTOM_FIELD_ID}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="cleanup: Delete enrollment" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE enroll" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/enroll</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Get _Payments" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get_payments" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/payments/${CUSTOMER_ID}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <objProp>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <objProp>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <objProp>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <objProp>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
