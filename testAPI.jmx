<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.2 r1790748">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="DEV-Azure" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">10.192.1.201</stringProp>
        <stringProp name="HTTPSampler.port">8003</stringProp>
        <stringProp name="HTTPSampler.protocol">http</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path">/sbps/api/achpaymentaccounts</stringProp>
        <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout">1200000</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Global Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="PAYMENT_DATE" elementType="Argument">
            <stringProp name="Argument.name">PAYMENT_DATE</stringProp>
            <stringProp name="Argument.value">2020-12-12T23:59:00.000Z</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CREDIT_CARD_PAYMENT_STATUS_ID_SUBMITTED" elementType="Argument">
            <stringProp name="Argument.name">CREDIT_CARD_PAYMENT_STATUS_ID_SUBMITTED</stringProp>
            <stringProp name="Argument.value">W9xuMYy!!!i@@@@@@bG!!!@@@p5KqeHeixFJhh2PMCTjorKTJNjrg5rsXwKaCzWSbt9Bqd@@@b1Ew4p39ppSoA8=</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Issues Sale</stringProp>
          </elementProp>
          <elementProp name="CREDIT_CARD_PAYMENT_STATUS_ID_PREAUTH" elementType="Argument">
            <stringProp name="Argument.name">CREDIT_CARD_PAYMENT_STATUS_ID_PREAUTH</stringProp>
            <stringProp name="Argument.value">P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0YsH90MJdXBftpkOZrl@@@iDqCVrIPI6C2llT</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Issues PreAuthorize</stringProp>
          </elementProp>
          <elementProp name="CREDIT_CARD_PAYMENT_STATUS_ID_AUTHORIZED" elementType="Argument">
            <stringProp name="Argument.name">CREDIT_CARD_PAYMENT_STATUS_ID_AUTHORIZED</stringProp>
            <stringProp name="Argument.value">YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ</stringProp>
            <stringProp name="Argument.desc">Issues Force</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BANK_ACCOUNT_TYPE_CHECKING" elementType="Argument">
            <stringProp name="Argument.name">BANK_ACCOUNT_TYPE_CHECKING</stringProp>
            <stringProp name="Argument.value">QDGfoL8MVLK8A49qup7O2vW1kILuFE2Eow8hlnsY@@@l1jYzkwG68DCa19YlM6bgcT</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BANK_ACCOUNT_TYPE_SAVINGS" elementType="Argument">
            <stringProp name="Argument.name">BANK_ACCOUNT_TYPE_SAVINGS</stringProp>
            <stringProp name="Argument.value">P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0YsV8HPWbEmbDEeeM3tA2BOBdT9zZTRyYp9</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="AUTOPAY_RECURRENCE_TYPE" elementType="Argument">
            <stringProp name="Argument.name">AUTOPAY_RECURRENCE_TYPE</stringProp>
            <stringProp name="Argument.value">p30JQBweOKuZceZ18ML46Z8DU6NeQqG9BBFxKMSyDdW5KC!!!Cw1aK6E17PFGm1Blv</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Dev-TotalT Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="USER_NAME" elementType="Argument">
            <stringProp name="Argument.name">USER_NAME</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.desc">Login user name</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PASSWORD" elementType="Argument">
            <stringProp name="Argument.name">PASSWORD</stringProp>
            <stringProp name="Argument.value">Finastra1!</stringProp>
            <stringProp name="Argument.desc">Login password</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CREDIT_CARD_PAYMENT_ACCOUNT_ID" elementType="Argument">
            <stringProp name="Argument.name">CREDIT_CARD_PAYMENT_ACCOUNT_ID</stringProp>
            <stringProp name="Argument.value">Z8aKX5bKYiomF4vDhaHwT2SkUX9j0HvzrUlrTIYGVdWi0CBxrRMWCmCNIKQfv5GP3TRq4BCyBJs=</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="FEE_SCHEDULE_ID" elementType="Argument">
            <stringProp name="Argument.name">FEE_SCHEDULE_ID</stringProp>
            <stringProp name="Argument.value">xcjYgZR@@@s1A!!!73mgAxeUqDGu1Mh0p!!!cXcnTYpgTutNhJpUqjpeg6D7o2aWjwxh4J</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CREDIT_CARD_PAYMENT_ID" elementType="Argument">
            <stringProp name="Argument.name">CREDIT_CARD_PAYMENT_ID</stringProp>
            <stringProp name="Argument.value">yLomMzcmAakmQNORF0Rk44gKZAT8HhcIHypICC4m4t9g2m7TRfR0sZe16RY141kq!!!MTfu@@@2Y4J4=</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ACH_PAYMENT_ACCOUNT_ID" elementType="Argument">
            <stringProp name="Argument.name">ACH_PAYMENT_ACCOUNT_ID</stringProp>
            <stringProp name="Argument.value">wRql4E0Gh@@@jBlCW7VFtehxA36LzaWcezEj2L6fWfuzqHwLxFZo3h!!!QOsKYYfFz5mgXUJUtEcTAE=</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="API_KEY" elementType="Argument">
            <stringProp name="Argument.name">API_KEY</stringProp>
            <stringProp name="Argument.value">78b6p8mcqe37302taab364ck1s2atrnfskji0l1p0r3mmllook</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PROCESSING_ACCOUNT_ID" elementType="Argument">
            <stringProp name="Argument.name">PROCESSING_ACCOUNT_ID</stringProp>
            <stringProp name="Argument.value">ksJllzfzVxN4Xb2ECi02fE99E8fX!!!7aQ5LoBovIn4VvQ6PHcffBkzHuPWvgfhxcM7p7oNrXA1xc=</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="API_KEY_NAME" elementType="Argument">
            <stringProp name="Argument.name">API_KEY_NAME</stringProp>
            <stringProp name="Argument.value">tweeking</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="NEW_CUSTOMER_ID" elementType="Argument">
            <stringProp name="Argument.name">NEW_CUSTOMER_ID</stringProp>
            <stringProp name="Argument.value">mKKiF8VCecJmPaQO7sAaktRuv7RVSGzsc9NW9nf1btx3@@@QWuW!!!iHXSdvU7mM3Hkj</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="QA-TotalT Variables" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="USER_NAME" elementType="Argument">
            <stringProp name="Argument.name">USER_NAME</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.desc">Login user name</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PASSWORD" elementType="Argument">
            <stringProp name="Argument.name">PASSWORD</stringProp>
            <stringProp name="Argument.value">Finastra1!</stringProp>
            <stringProp name="Argument.desc">Login password</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CREDIT_CARD_PAYMENT_ACCOUNT_ID" elementType="Argument">
            <stringProp name="Argument.name">CREDIT_CARD_PAYMENT_ACCOUNT_ID</stringProp>
            <stringProp name="Argument.value">Z8aKX5bKYiomF4vDhaHwT2SkUX9j0HvzrUlrTIYGVdWi0CBxrRMWCmCNIKQfv5GP3TRq4BCyBJs=</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="FEE_SCHEDULE_ID" elementType="Argument">
            <stringProp name="Argument.name">FEE_SCHEDULE_ID</stringProp>
            <stringProp name="Argument.value">xcjYgZR@@@s1A!!!73mgAxeUqDGu1Mh0p!!!cXcnTYpgTutNhJpUqjpeg6D7o2aWjwxh4J</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CREDIT_CARD_PAYMENT_ID" elementType="Argument">
            <stringProp name="Argument.name">CREDIT_CARD_PAYMENT_ID</stringProp>
            <stringProp name="Argument.value">yLomMzcmAakmQNORF0Rk44gKZAT8HhcIHypICC4m4t9g2m7TRfR0sZe16RY141kq!!!MTfu@@@2Y4J4=</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ACH_PAYMENT_ACCOUNT_ID" elementType="Argument">
            <stringProp name="Argument.name">ACH_PAYMENT_ACCOUNT_ID</stringProp>
            <stringProp name="Argument.value">wRql4E0Gh@@@jBlCW7VFtehxA36LzaWcezEj2L6fWfuzqHwLxFZo3h!!!QOsKYYfFz5mgXUJUtEcTAE=</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="API_KEY" elementType="Argument">
            <stringProp name="Argument.name">API_KEY</stringProp>
            <stringProp name="Argument.value">78b6p8mcqe37302taab364ck1s2atrnfskji0l1p0r3mmllook</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PROCESSING_ACCOUNT_ID" elementType="Argument">
            <stringProp name="Argument.name">PROCESSING_ACCOUNT_ID</stringProp>
            <stringProp name="Argument.value">ksJllzfzVxN4Xb2ECi02fE99E8fX!!!7aQ5LoBovIn4VvQ6PHcffBkzHuPWvgfhxcM7p7oNrXA1xc=</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="API_KEY_NAME" elementType="Argument">
            <stringProp name="Argument.name">API_KEY_NAME</stringProp>
            <stringProp name="Argument.value">tweeking</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="NEW_CUSTOMER_ID" elementType="Argument">
            <stringProp name="Argument.name">NEW_CUSTOMER_ID</stringProp>
            <stringProp name="Argument.value">mKKiF8VCecJmPaQO7sAaktRuv7RVSGzsc9NW9nf1btx3@@@QWuW!!!iHXSdvU7mM3Hkj</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="Local Deploy" enabled="false">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">localhost</stringProp>
        <stringProp name="HTTPSampler.port">80</stringProp>
        <stringProp name="HTTPSampler.protocol">http</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Local Deploy Variables" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="USER_NAME" elementType="Argument">
            <stringProp name="Argument.name">USER_NAME</stringProp>
            <stringProp name="Argument.value">merchant</stringProp>
            <stringProp name="Argument.desc">Login user name</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PASSWORD" elementType="Argument">
            <stringProp name="Argument.name">PASSWORD</stringProp>
            <stringProp name="Argument.value">pass1</stringProp>
            <stringProp name="Argument.desc">Login password</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CREDIT_CARD_PAYMENT_ACCOUNT_ID" elementType="Argument">
            <stringProp name="Argument.name">CREDIT_CARD_PAYMENT_ACCOUNT_ID</stringProp>
            <stringProp name="Argument.value">NW1acUfJ@@@Tn33Cw3ktWssB19@@@UfRnzSP3HS!!!eOtCGe8w5OxgM4PUVIQK@@@Ftik4Ps98BluzaMWTc=</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="FEE_SCHEDULE_ID" elementType="Argument">
            <stringProp name="Argument.name">FEE_SCHEDULE_ID</stringProp>
            <stringProp name="Argument.value">GiHSoz9X2OxEsixMY!!!YFe9LRtlmFKsnH5FpV7f89MGar9iM2iciemuRL4eoK1e7R</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CREDIT_CARD_PAYMENT_ID" elementType="Argument">
            <stringProp name="Argument.name">CREDIT_CARD_PAYMENT_ID</stringProp>
            <stringProp name="Argument.value">hIgQjaWjLFIh9T2jFs35LOx7lGfo82dCcpgbIdxW6yWaIFVg9B@@@R5DIsGjyWLneG</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ACH_PAYMENT_ACCOUNT_ID" elementType="Argument">
            <stringProp name="Argument.name">ACH_PAYMENT_ACCOUNT_ID</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CUSTOMER_ID" elementType="Argument">
            <stringProp name="Argument.name">CUSTOMER_ID</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="API_KEY" elementType="Argument">
            <stringProp name="Argument.name">API_KEY</stringProp>
            <stringProp name="Argument.value">rojl6colki3rv7bb7fd5s1n9eecheafbd2uktb2b08598bva3r</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Api Key Name (/aip/enroll)" enabled="false">
        <stringProp name="maximumValue">600</stringProp>
        <stringProp name="minimumValue">500</stringProp>
        <stringProp name="outputFormat">ApiKey_00</stringProp>
        <boolProp name="perThread">true</boolProp>
        <stringProp name="randomSeed"></stringProp>
        <stringProp name="variableName">API_KEY_NAME</stringProp>
      </RandomVariableConfig>
      <hashTree/>
      <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random User Name (/api/users)" enabled="false">
        <stringProp name="maximumValue">99</stringProp>
        <stringProp name="minimumValue">1</stringProp>
        <stringProp name="outputFormat">UserName00</stringProp>
        <boolProp name="perThread">true</boolProp>
        <stringProp name="randomSeed"></stringProp>
        <stringProp name="variableName">RANDOM_USER_NAME</stringProp>
      </RandomVariableConfig>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1403905983000</longProp>
        <longProp name="ThreadGroup.end_time">1403905983000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="NO APIKEY HEADER" enabled="false">
          <stringProp name="TestPlan.comments">NO APIKEY HEADER</stringProp>
        </GenericController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Enumerations Using &lt;Login&gt;" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST(GET) enumerations" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;Login xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;UserName&gt;${USER_NAME}&lt;/UserName&gt;&#xd;
  &lt;Password&gt;${PASSWORD}&lt;/Password&gt;&#xd;
&lt;/Login&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/enumerations</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">X-HTTP-Method-Override</stringProp>
                    <stringProp name="Header.value">GET</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="setup: Processing Accounts Using &lt;Login&gt;" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST(GET) processingaccounts" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;Login xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;UserName&gt;${USER_NAME}&lt;/UserName&gt;&#xd;
  &lt;Password&gt;${PASSWORD}&lt;/Password&gt;&#xd;
&lt;/Login&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/processingaccounts?name=&apos;dhl&apos;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">X-HTTP-Method-Override</stringProp>
                    <stringProp name="Header.value">GET</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">PROCESSING_ACCOUNT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">id=&quot;([^&quot;]*)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="setup: Enroll" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST enroll" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;EnrollRequest xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;UserName&gt;${USER_NAME}&lt;/UserName&gt;&#xd;
  &lt;Password&gt;${PASSWORD}&lt;/Password&gt;&#xd;
  &lt;ApiKeyName&gt;${API_KEY_NAME}&lt;/ApiKeyName&gt;&#xd;
  &lt;ProcessingAccountId&gt;${PROCESSING_ACCOUNT_ID}&lt;/ProcessingAccountId&gt;&#xd;
&lt;/EnrollRequest&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/enroll</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">API_KEY</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;ApiKey.*?\&gt;(.*)&lt;/ApiKey&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">SESSION_TOKEN</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;SessionToken.*?\&gt;(.*)&lt;/SessionToken&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="WITH APIKEY" enabled="true"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-TT-APIKEY</stringProp>
                <stringProp name="Header.value">${API_KEY}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-TT-SESSIONTOKEN</stringProp>
                <stringProp name="Header.value">DEPRICATED</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name"></stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Payment alerts" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get AchPaymentAlert" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.225.63</stringProp>
              <stringProp name="HTTPSampler.port">8003</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/achpaymentalert/5P4Yd0UmE8BhPay7GSiRNbssXLm9MeWYX8I5HQLLIFv@@@g1HTpZ75qjxGNd1I7NrKnD7Dfn9TSs8=</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET Creditcardpaymentalert" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.225.252</stringProp>
              <stringProp name="HTTPSampler.port">8003</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpaymentalert/63plvOi@@@PrtOmUxBt1LLtQF5w0a4mqnOz1rElGBhXA77oGCMAK8CSAzdVMn68v10nTKKJmSNpig=</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ACH GenId" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.port">80</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/alertIdEncrypter?ach=864051</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CC GenId" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.port">80</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/alertIdEncrypter?cc=1</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetCollection" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.225.252</stringProp>
              <stringProp name="HTTPSampler.port">8003</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/paymentalerts</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreditCard sort=Description" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.225.252</stringProp>
              <stringProp name="HTTPSampler.port">8003</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpaymentalerts?sort=Description</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreditCard sort=Audit user id" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.225.252</stringProp>
              <stringProp name="HTTPSampler.port">8003</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpaymentalerts?sort=auditUserId&amp;order=asc</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreditCard sort=Date Created" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.225.252</stringProp>
              <stringProp name="HTTPSampler.port">8003</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpaymentalerts?sort=dateCreated&amp;order=desc</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreditCard filter= date created" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.225.252</stringProp>
              <stringProp name="HTTPSampler.port">8003</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpaymentalerts?filter=${__urlencode(dateCreated:&gt;07/21/2017)}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreditCard filter= status" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.225.252</stringProp>
              <stringProp name="HTTPSampler.port">8003</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpaymentalerts?filter=ccpaymentalertstatus:QDGfoL8MVLK8A49qup7O2vW1kILuFE2ELUGloEB0TwCj2lnnJREFAJiZAbdKOX7I</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Ach sort=Description" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.225.252</stringProp>
              <stringProp name="HTTPSampler.port">8003</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/achpaymentalerts?sort=Description&amp;order=desc</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Ach sort=audit user id" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.225.252</stringProp>
              <stringProp name="HTTPSampler.port">8003</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/achpaymentalerts?sort=auditUserId&amp;order=asc</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Ach sort=Date Created" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.225.252</stringProp>
              <stringProp name="HTTPSampler.port">8003</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/achpaymentalerts?sort=dateCreated</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Ach filter = date created" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.225.252</stringProp>
              <stringProp name="HTTPSampler.port">8003</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/achpaymentalerts?filter=${__urlencode(dateCreated:07/20/2017)}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Ach filter = status" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.225.252</stringProp>
              <stringProp name="HTTPSampler.port">8003</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/achpaymentalerts?filter=achpaymentalertstatus:P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0YscCpXJoJh9bLhcSTE9D3GthJ@@@6hBsBy5S</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Customers" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET customers" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/customers/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Customer ID Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">CUSTOMER_ID</stringProp>
                <stringProp name="RegexExtractor.regex">[&lt;:]Customer .*?id=&quot;(.*?)&quot; href</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="First name Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">CUSTOMER_FIRSTNAME</stringProp>
                <stringProp name="RegexExtractor.regex">[&lt;:]FirstName([^&gt;]*?)&gt;(.*)&lt;/(.*?:?)FirstName&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Last Name Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">CUSTOMER_LASTNAME</stringProp>
                <stringProp name="RegexExtractor.regex">[&lt;:]LastName([^&gt;]*?)&gt;(.*)&lt;/(.*?:?)LastName&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$2$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">true</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET customers subcollection" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="filter" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">firstName:${CUSTOMER_FIRSTNAME},lastName:${CUSTOMER_LASTNAME}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">filter</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/customers</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET customer" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/customer/${__urlencode(${CUSTOMER_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST customer" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;Customer xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;FirstName&gt;Jill&lt;/FirstName&gt;&#xd;
  &lt;LastName&gt;Brown&lt;/LastName&gt;&#xd;
  &lt;Street1&gt;5800 NW 39th AVE&lt;/Street1&gt;&#xd;
  &lt;City&gt;Gainsville&lt;/City&gt;&#xd;
  &lt;State&gt;FL&lt;/State&gt;&#xd;
  &lt;Zip&gt;28650&lt;/Zip&gt;&#xd;
  &lt;Country&gt;US&lt;/Country&gt;&#xd;
  &lt;PhoneNumber&gt;(351) 862-9331&lt;/PhoneNumber&gt;&#xd;
  &lt;EmailAddress&gt;allison.hodge@mail.com&lt;/EmailAddress&gt;&#xd;
  &lt;Status&gt;1&lt;/Status&gt;&#xd;
  &lt;CustomerType id=&quot;QDGfoL8MVLK8A49qup7O2vW1kILuFE2Eq@@@mN2A2Ry675uafX0s7TLwl4yqMSsQ0f&quot;/&gt;&#xd;
&lt;/Customer&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/customer</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_CUSTOMER_ID</stringProp>
                <stringProp name="RegexExtractor.regex">[&lt;:]Customer .*?id=&quot;(.*)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="TestPlan.comments">Fix to &lt;User .* id=&quot;(.*)&quot; href=&quot;.*&quot;&gt; once user has href set</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT customer" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;Customer xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;FirstName&gt;Jillian&lt;/FirstName&gt;&#xd;
&lt;/Customer&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/customer/${__urlencode(${NEW_CUSTOMER_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_CUSTOMER_ID</stringProp>
                <stringProp name="RegexExtractor.regex">[&lt;:]Customer .*?id=&quot;(.*)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="TestPlan.comments">Fix to &lt;User .* id=&quot;(.*)&quot; href=&quot;.*&quot;&gt; once user has href set</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE customer" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/customer/${__urlencode(${NEW_CUSTOMER_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_CUSTOMER_ID</stringProp>
                <stringProp name="RegexExtractor.regex">[&lt;:]Customer .*?id=&quot;(.*)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="TestPlan.comments">Fix to &lt;User .* id=&quot;(.*)&quot; href=&quot;.*&quot;&gt; once user has href set</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ACH Payment Accounts" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET achpaymentaccounts" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/achpaymentaccounts</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ACH_PAYMENT_ACCOUNT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;ns0:AchPaymentAccount id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET achpaymentaccount" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/achpaymentaccount/${__urlencode(${ACH_PAYMENT_ACCOUNT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST achpaymentaccount" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;AchPaymentAccount xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;RoutingNumber&gt;121042882&lt;/RoutingNumber&gt;&#xd;
  &lt;AccountNumber&gt;936008329&lt;/AccountNumber&gt;&#xd;
  &lt;Name&gt;CHECKING xxxxx8329&lt;/Name&gt;&#xd;
  &lt;NameOnAccount&gt;Jack Brown&lt;/NameOnAccount&gt;&#xd;
  &lt;Customer id=&quot;${CUSTOMER_ID}&quot;/&gt;&#xd;
  &lt;BankAccountType id=&quot;${BANK_ACCOUNT_TYPE_CHECKING}&quot;/&gt;&#xd;
&lt;/AchPaymentAccount&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/achpaymentaccount</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_ACH_PAYMENT_ACCOUNT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;ns0:AchPaymentAccount .* id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT but create achpaymentaccount" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;AchPaymentAccount xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;RoutingNumber&gt;011302221&lt;/RoutingNumber&gt;&#xd;
  &lt;AccountNumber&gt;163657899&lt;/AccountNumber&gt;&#xd;
  &lt;NameOnAccount&gt;Jack Brown&lt;/NameOnAccount&gt;&#xd;
  &lt;Customer id=&quot;${CUSTOMER_ID}&quot;/&gt;&#xd;
  &lt;BankAccountType id=&quot;QDGfoL8MVLK8A49qup7O2vW1kILuFE2Eow8hlnsY@@@l1jYzkwG68DCa19YlM6bgcT&quot;/&gt;&#xd;
&lt;/AchPaymentAccount&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/achpaymentaccount/${__urlencode(${NEW_ACH_PAYMENT_ACCOUNT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT achpaymentaccount" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;AchPaymentAccount xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;NameOnAccount&gt;Jack R. Brown&lt;/NameOnAccount&gt;&#xd;
  &lt;Customer id=&quot;${CUSTOMER_ID}&quot;/&gt;&#xd;
  &lt;BankAccountType id=&quot;QDGfoL8MVLK8A49qup7O2vW1kILuFE2Eow8hlnsY@@@l1jYzkwG68DCa19YlM6bgcT&quot;/&gt;&#xd;
&lt;/AchPaymentAccount&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/achpaymentaccount/${__urlencode(${NEW_ACH_PAYMENT_ACCOUNT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE achpaymentaccount" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/achpaymentaccount/${__urlencode(${NEW_ACH_PAYMENT_ACCOUNT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ACH Payments" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET achpaymentaccounts" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.225.252</stringProp>
              <stringProp name="HTTPSampler.port">8003</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/achpaymentaccounts</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ACH_PAYMENT_ACCOUNT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;ns0:AchPaymentAccount id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET achpayments" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">8003</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/achpayments</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ACH_PAYMENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;ns0:AchPayment id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET achpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/achpayment/${ACH_PAYMENT_ID}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST achpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;AchPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;Amount&gt;102&lt;/Amount&gt;&#xd;
  &lt;EmailNotes&gt;Email to Geo maxwell&lt;/EmailNotes&gt;&#xd;
  &lt;InvoiceNumber&gt;T5VC5&lt;/InvoiceNumber&gt;&#xd;
  &lt;PaymentDate&gt;${PAYMENT_DATE}&lt;/PaymentDate&gt;&#xd;
  &lt;PoNumber&gt;MOY49&lt;/PoNumber&gt;&#xd;
  &lt;ReportNotes&gt;Report&lt;/ReportNotes&gt;&#xd;
  &lt;TaxAmount&gt;8.00&lt;/TaxAmount&gt;&#xd;
  &lt;AchPaymentAccount id=&quot;${ACH_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;AchPaymentStatus id=&quot;KZXgPdwfN48Lpt5kjdGbEJYVmDL1Sw@@@cmwWVITX9lyakO2S0L@@@MEhMSfo!!!MfUQes&quot;/&gt;&#xd;
  &lt;BankAccountType id=&quot;QDGfoL8MVLK8A49qup7O2vW1kILuFE2Eow8hlnsY@@@l1jYzkwG68DCa19YlM6bgcT&quot;/&gt;&#xd;
  &lt;SecCode&gt;WEB&lt;/SecCode&gt;&#xd;
&lt;/AchPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/achpayment</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_ACH_PAYMENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;ns0:AchPayment xmlns=&quot;.*&quot; id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT achpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;AchPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;Amount&gt;220&lt;/Amount&gt;&#xd;
  &lt;EmailNotes&gt;Email&lt;/EmailNotes&gt;&#xd;
  &lt;ExternalId&gt;02050033101&lt;/ExternalId&gt;&#xd;
  &lt;Fee&gt;10&lt;/Fee&gt;&#xd;
  &lt;FeeSchedule id=&quot;NW1acUfJ@@@Tn33Cw3ktWssB19@@@UfRnzSP3HS!!!eOtCGe!!!T8LkmtJe8aFSFRY0y3sPm&quot;/&gt;&#xd;
  &lt;InvoiceNumber&gt;T5VC5&lt;/InvoiceNumber&gt;&#xd;
  &lt;PaymentDate&gt;2015-10-26T21:34:55.000Z&lt;/PaymentDate&gt;&#xd;
  &lt;PoNumber&gt;MOY49&lt;/PoNumber&gt;&#xd;
  &lt;ReportNotes&gt;Report&lt;/ReportNotes&gt;&#xd;
  &lt;TaxAmount&gt;8.00&lt;/TaxAmount&gt;&#xd;
  &lt;AchPaymentAccount id=&quot;${ACH_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;AchPaymentStatus id=&quot;HbAz0KIszQ0VuhnbWK!!!EgFFc!!!2vHpXlUw8vG@@@U8wO66SyWp3HNa4Ba6HOrFO0rzx&quot;&gt;&#xd;
    &lt;Code canRevise=&quot;false&quot; canAssign=&quot;false&quot;&gt;Submitted&lt;/Code&gt;&#xd;
    &lt;Name canRevise=&quot;false&quot; canAssign=&quot;false&quot;&gt;Submitted&lt;/Name&gt;&#xd;
    &lt;Description canRevise=&quot;false&quot; canAssign=&quot;false&quot;&gt;Submitted&lt;/Description&gt;&#xd;
    &lt;Active canRevise=&quot;false&quot; canAssign=&quot;false&quot;&gt;true&lt;/Active&gt;&#xd;
    &lt;SortOrder canRevise=&quot;false&quot; canAssign=&quot;false&quot;&gt;0&lt;/SortOrder&gt;&#xd;
  &lt;/AchPaymentStatus&gt;&#xd;
  &lt;BankAccountType id=&quot;QDGfoL8MVLK8A49qup7O2vW1kILuFE2Eow8hlnsY@@@l1jYzkwG68DCa19YlM6bgcT&quot;/&gt;&#xd;
  &lt;SecCode&gt;WEB&lt;/SecCode&gt;&#xd;
&lt;/AchPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/achpayment/${__urlencode(${NEW_ACH_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Refund achpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;AchPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;Amount&gt;748.63&lt;/Amount&gt;&#xd;
  &lt;AuditUserId&gt;12345&lt;/AuditUserId&gt;&#xd;
  &lt;ExternalId&gt;X2I8A&lt;/ExternalId&gt;&#xd;
  &lt;Fee&gt;10&lt;/Fee&gt;&#xd;
  &lt;FeeSchedule id=&apos;UAHy48ngyHBxhaBARjC@@@wgPiPQVe4kd!!!i8aqEb5k6Hf83B@@@9783CE3lo7iNBaQxU&apos;/&gt;&#xd;
  &lt;InvoiceNumber&gt;KGHNX&lt;/InvoiceNumber&gt;&#xd;
  &lt;PaymentDate&gt;2014-08-11T15:06:00&lt;/PaymentDate&gt;&#xd;
  &lt;PoNumber&gt;N65BL&lt;/PoNumber&gt;&#xd;
  &lt;AchPaymentAccount id=&apos;${ACH_PAYMENT_ACCOUNT_ID}&apos;/&gt;&#xd;
  &lt;AchPaymentStatus id=&apos;Rn2noSPkuHFBwIk25mKk2QA4Q65M6bl9cT0!!!InSuI2FHeKP!!!0YZJMVzogFjSzyFs&apos;/&gt;&#xd;
  &lt;BankAccountType id=&apos;QDGfoL8MVLK8A49qup7O2vW1kILuFE2Eow8hlnsY@@@l1jYzkwG68DCa19YlM6bgcT&apos;/&gt;&#xd;
  &lt;SecCode&gt;TEL&lt;/SecCode&gt;&#xd;
&lt;/AchPayment&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/achpayment/${__urlencode(${NEW_ACH_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE achpayment" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/achpayment/${__urlencode(${NEW_ACH_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Processing Accounts" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET processingaccounts" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">8003</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/processingaccounts</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
                <stringProp name="RegexExtractor.refname">PROCESSING_ACCOUNT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">ProcessingAccount id=&quot;(.*)&quot; href</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
                <stringProp name="Scope.variable">CREDIT_CARD_PAYMENT_ID</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Payment Accounts" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET paymentaccounts" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/paymentaccounts</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">CREDIT_CARD_PAYMENT_ACCOUNT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;ns0:CreditCardPaymentAccount id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ACH_PAYMENT_ACCOUNT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;ns0:AchPaymentAccount id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET creditcardpaymentaccount" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpaymentaccount/${__urlencode(${CREDIT_CARD_PAYMENT_ACCOUNT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET achpaymentaccount" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/achpaymentaccount/${__urlencode(${ACH_PAYMENT_ACCOUNT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST creditcardpaymentaccount" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPaymentAccount xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
    &lt;Name&gt;DISCOVER 3&lt;/Name&gt;&#xd;
    &lt;CardNumber&gt;6011695243087575&lt;/CardNumber&gt;&#xd;
    &lt;ExpiredDate&gt;2015-12-31T11:59:59.000Z&lt;/ExpiredDate&gt;&#xd;
    &lt;ExternalId&gt;1111&lt;/ExternalId&gt;&#xd;
    &lt;NameOnCard&gt;Jacky Brown&lt;/NameOnCard&gt;&#xd;
    &lt;Customer id=&quot;NW1acUfJ@@@Tn33Cw3ktWssB19@@@UfRnzSP3HS!!!eOtCGe8pcl1p7HKPJNWPiDsg4sCy&quot;/&gt;&#xd;
    &lt;BillingAddressStreet&gt;5800 NW 39th AVE&lt;/BillingAddressStreet&gt;&#xd;
    &lt;BillingCity&gt;Gainsville&lt;/BillingCity&gt;&#xd;
    &lt;BillingState&gt;FL&lt;/BillingState&gt;&#xd;
    &lt;BillingZip&gt;32606&lt;/BillingZip&gt;&#xd;
&lt;/CreditCardPaymentAccount&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpaymentaccount</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_CREDIT_CARD_PAYMENT_ACCOUNT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;CreditCardPaymentAccount .* id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE creditcardpaymentaccount" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpaymentaccount/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ACCOUNT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Credit Card Payment Accounts" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET creditcardpaymentaccount" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpaymentaccount/${__urlencode(${CREDIT_CARD_PAYMENT_ACCOUNT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST creditcardpaymentaccount" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPaymentAccount xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;Name&gt;VISA 4111&lt;/Name&gt;&#xd;
  &lt;CardNumber&gt;4111111111111111&lt;/CardNumber&gt;&#xd;
  &lt;ExpiredDate&gt;2017-12-31T11:59:59.000Z&lt;/ExpiredDate&gt;&#xd;
  &lt;Default&gt;true&lt;/Default&gt;&#xd;
  &lt;ExternalId&gt;1111&lt;/ExternalId&gt;&#xd;
  &lt;NameOnCard&gt;Jackson Walsh&lt;/NameOnCard&gt;&#xd;
  &lt;Customer id=&quot;${NEW_CUSTOMER_ID}&quot;/&gt;&#xd;
  &lt;CreditCardType id=&quot;8IbQ47tlirrzpU4yXKon0pNz53euZH9yaUmUrYAivp5NqGGRcn77V03iwaze1!!!ac&quot; /&gt;&#xd;
  &lt;BillingAddressStreet&gt;5800 NW 39th AVE&lt;/BillingAddressStreet&gt;&#xd;
  &lt;BillingCity&gt;Gainesville&lt;/BillingCity&gt;&#xd;
  &lt;BillingState&gt;FL&lt;/BillingState&gt;&#xd;
  &lt;BillingZip&gt;28650&lt;/BillingZip&gt;&#xd;
  &lt;PointOfEntry id=&quot;A1gLCd2OCZEr9x3AEZvd2mn5UCOeyiXsQvqVzqQA5bI2orElKjJaXrLukOAPG7wy&quot;/&gt;&#xd;
&lt;/CreditCardPaymentAccount&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpaymentaccount</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">CREDIT_CARD_PAYMENT_ACCOUNT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;ns0:CreditCardPaymentAccount .* id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpaymentaccount" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPaymentAccount xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;Name&gt;DISCOVER number 1&lt;/Name&gt;&#xd;
  &lt;NameOnCard&gt;Jackson R. Walsh&lt;/NameOnCard&gt;&#xd;
&lt;/CreditCardPaymentAccount&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpaymentaccount/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ACCOUNT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE creditcardpaymentaccount" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpaymentaccount/${__urlencode(${NEW_CREDIT_CARD_PAYMENT_ACCOUNT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Credit Card Payments" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET creditcardpayments" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayments?sort=Amount&amp;expand=feeschedule</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
                <stringProp name="RegexExtractor.refname">CREDIT_CARD_PAYMENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">CreditCardPayment id=&quot;(.*)&quot; href</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
                <stringProp name="Scope.variable">CREDIT_CARD_PAYMENT_ID</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST creditcardpayment" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
                &lt;Amount&gt;75&lt;/Amount&gt;&#xd;
                &lt;CreditCardId&gt;1001000000005071&lt;/CreditCardId&gt;&#xd;
                &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
                &lt;CreditCardPaymentStatus id=&quot;YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeEugJwVrP1ubunSzjnNLUxABy4tlzS5ZRQ&quot;/&gt;&#xd;
                &lt;Cvv&gt;999&lt;/Cvv&gt;&#xd;
                &lt;ExpirationDate&gt;2019-12-31T00:00:00.000Z&lt;/ExpirationDate&gt;&#xd;
                &lt;NameOnCard&gt;Chaney Music&lt;/NameOnCard&gt;&#xd;
                            &#xd;
&lt;/CreditCardPayment&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">CREDIT_CARD_PAYMENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;ns0:CreditCardPayment .* id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST creditcardpayment level 3 line item" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
  &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;136.93&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FeeSchedule id=&quot;${FEE_SCHEDULE_ID}&quot;/&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;${PAYMENT_DATE}&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000006&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;5&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Feet&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;12&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;0&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.00&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000007&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 2&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;122&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;2&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Blocks&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;8&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;2&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;5&lt;/DiscountRate&gt;&#xd;
      &lt;Amount&gt;13.20&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000008&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 3&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;123&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;1&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Inch&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;53.50&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;12&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;22&lt;/DiscountRate&gt;&#xd;
      &lt;Amount&gt;29.73&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
  &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;${CREDIT_CARD_PAYMENT_STATUS_ID_PREAUTH}&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">CREDIT_CARD_PAYMENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;ns0:CreditCardPayment .* id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;AlternateTaxAmount&gt;4.50&lt;/AlternateTaxAmount&gt;&#xd;
  &lt;AlternateTaxId&gt;60&lt;/AlternateTaxId&gt;&#xd;
  &lt;AmexTaa1&gt;amex 1&lt;/AmexTaa1&gt;&#xd;
  &lt;AmexTaa2&gt;amex 2&lt;/AmexTaa2&gt;&#xd;
  &lt;AmexTaa3&gt;amex 3&lt;/AmexTaa3&gt;&#xd;
  &lt;AmexTaa4&gt;amex 4&lt;/AmexTaa4&gt;&#xd;
  &lt;Amount&gt;140.17&lt;/Amount&gt;&#xd;
  &lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
  &lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
  &lt;DiscountAmount&gt;10&lt;/DiscountAmount&gt;&#xd;
  &lt;DutyAmount&gt;5&lt;/DutyAmount&gt;&#xd;
  &lt;FreightAmount&gt;30&lt;/FreightAmount&gt;&#xd;
  &lt;GrandTotalAmount&gt;5&lt;/GrandTotalAmount&gt;&#xd;
  &lt;PaymentDate&gt;${PAYMENT_DATE}&lt;/PaymentDate&gt;&#xd;
  &lt;PaymentLvl3Items&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000006&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 1&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;121&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;5&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Hand&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;12&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;5&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;10&lt;/DiscountRate&gt;&#xd;
      &lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
      &lt;InvoiceNumber&gt;12&lt;/InvoiceNumber&gt;&#xd;
      &lt;ItemReferenceNumber&gt;13&lt;/ItemReferenceNumber&gt;&#xd;
      &lt;TaxAmount&gt;0&lt;/TaxAmount&gt;&#xd;
      &lt;TaxRate&gt;0&lt;/TaxRate&gt;&#xd;
      &lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
      &lt;Amount&gt;49.50&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000007&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 2&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;122&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;2&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;Squares&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;8&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;2&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;5&lt;/DiscountRate&gt;&#xd;
      &lt;Amount&gt;13.30&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
    &lt;PaymentLvl3Item&gt;&#xd;
      &lt;CommodityCode&gt;10000008&lt;/CommodityCode&gt;&#xd;
      &lt;ProductDescription&gt;Product 3&lt;/ProductDescription&gt;&#xd;
      &lt;ProductCode&gt;123&lt;/ProductCode&gt;&#xd;
      &lt;Qty&gt;1&lt;/Qty&gt;&#xd;
      &lt;UnitOfMeasure&gt;cm&lt;/UnitOfMeasure&gt;&#xd;
      &lt;UnitPrice&gt;53.50&lt;/UnitPrice&gt;&#xd;
      &lt;DiscountAmount&gt;12&lt;/DiscountAmount&gt;&#xd;
      &lt;DiscountRate&gt;22&lt;/DiscountRate&gt;&#xd;
      &lt;Amount&gt;32.37&lt;/Amount&gt;&#xd;
    &lt;/PaymentLvl3Item&gt;&#xd;
  &lt;/PaymentLvl3Items&gt;&#xd;
  &lt;TaxAmount&gt;20.00&lt;/TaxAmount&gt;&#xd;
  &lt;TaxRate&gt;4&lt;/TaxRate&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;${CREDIT_CARD_PAYMENT_STATUS_ID_AUTHORIZED}&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;Amount&gt;50&lt;/Amount&gt;&#xd;
  &lt;PaymentDate&gt;${CREDIT_CARD_PAYMENT_DATE}&lt;/PaymentDate&gt;&#xd;
  &lt;FeeSchedule id=&quot;${FEE_SCHEDULE_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;${CREDIT_CARD_PAYMENT_STATUS_ID_AUTHORIZED}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;CreditCardPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;Amount&gt;50&lt;/Amount&gt;&#xd;
  &lt;PaymentDate&gt;${CREDIT_CARD_PAYMENT_DATE}&lt;/PaymentDate&gt;&#xd;
  &lt;FeeSchedule id=&quot;${FEE_SCHEDULE_ID}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentStatus id=&quot;${CREDIT_CARD_PAYMENT_STATUS_ID_SUBMITTED}&quot;/&gt;&#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
&lt;/CreditCardPayment&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE creditcardpayment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Schedule Payments" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET creditcardpaymentaccounts" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpaymentaccounts</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">CREDIT_CARD_PAYMENT_ACCOUNT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;CreditCardPaymentAccount id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET achpaymentaccounts" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/achpaymentaccounts</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ACH_PAYMENT_ACCOUNT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;AchPaymentAccount id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET paymentschedules" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.225.252</stringProp>
              <stringProp name="HTTPSampler.port">8003</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/paymentschedules</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
                <stringProp name="RegexExtractor.refname">PAYMENT_SCHEDULE_ID</stringProp>
                <stringProp name="RegexExtractor.regex">PaymentSchedule id=&quot;(.*)&quot; href</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
                <stringProp name="Scope.variable">CREDIT_CARD_PAYMENT_ID</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET paymentschedule" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/paymentschedule/${__urlencode(${PAYMENT_SCHEDULE_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE  payment schedule" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/paymentschedule/${__urlencode(${PAYMENT_SCHEDULE_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
                <stringProp name="RegexExtractor.refname">PAYMENT_SCHEDULE_ID</stringProp>
                <stringProp name="RegexExtractor.regex">PaymentSchedule id=&quot;(.*)&quot; href</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
                <stringProp name="Scope.variable">CREDIT_CARD_PAYMENT_ID</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Post Payment Schedule CC" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;PaymentSchedule xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
	&lt;PaymentAmount&gt;100&lt;/PaymentAmount&gt;&#xd;
	&lt;OriginalAmount&gt;300&lt;/OriginalAmount&gt;&#xd;
	&lt;OriginalDueAmount&gt;200&lt;/OriginalDueAmount&gt;&#xd;
	&lt;FeePerPayment&gt;1&lt;/FeePerPayment&gt;&#xd;
	&lt;TaxAmountPerPayment&gt;2&lt;/TaxAmountPerPayment&gt;&#xd;
	&lt;TotalPaymentsToPay&gt;3&lt;/TotalPaymentsToPay&gt;&#xd;
	&lt;PaymentsPaid&gt;1&lt;/PaymentsPaid&gt;&#xd;
	&lt;StartDate&gt;${PAYMENT_DATE}&lt;/StartDate&gt;&#xd;
	&lt;InvoiceNumber&gt;T5VC5&lt;/InvoiceNumber&gt;&#xd;
	&lt;PoNumber&gt;MOY49&lt;/PoNumber&gt;&#xd;
	&lt;CustomDataFields&gt;&lt;/CustomDataFields&gt;&#xd;
	&lt;ReportNotes&gt;&lt;/ReportNotes&gt;&#xd;
	&lt;EmailNotes&gt;&lt;/EmailNotes&gt;&#xd;
	&lt;ExternalId&gt;Token1&lt;/ExternalId&gt;&#xd;
	&lt;AchPaymentAccount id=&quot;${ACH_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
	&lt;RecurrenceType id=&quot;P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0YsNzkAYBxJF7cOQjFM6pxUlGpvpZpU!!!X7l&quot;/&gt;&#xd;
	&lt;FrequencyType id=&quot;QDGfoL8MVLK8A49qup7O2vW1kILuFE2EqJLLYVjupqeyiA4J9Y3wXP1iWaa7FcQi&quot; /&gt;&#xd;
	&lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
	&lt;PointOfEntry id=&quot;P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0Ys8z4UUkB6!!!SAwJXGr7p!!!HVal4uYO69Tkv&quot;/&gt;		&#xd;
&lt;/PaymentSchedule&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/paymentschedule</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Post Payment Schedule ACH" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;PaymentSchedule xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
	&lt;PaymentAmount&gt;100&lt;/PaymentAmount&gt;&#xd;
	&lt;OriginalAmount&gt;300&lt;/OriginalAmount&gt;&#xd;
	&lt;OriginalDueAmount&gt;200&lt;/OriginalDueAmount&gt;&#xd;
	&lt;FeePerPayment&gt;1&lt;/FeePerPayment&gt;&#xd;
	&lt;TaxAmountPerPayment&gt;2&lt;/TaxAmountPerPayment&gt;&#xd;
	&lt;TotalPaymentsToPay&gt;3&lt;/TotalPaymentsToPay&gt;&#xd;
	&lt;PaymentsPaid&gt;1&lt;/PaymentsPaid&gt;&#xd;
	&lt;StartDate&gt;${PAYMENT_DATE}&lt;/StartDate&gt;&#xd;
	&lt;InvoiceNumber&gt;T5VC5&lt;/InvoiceNumber&gt;&#xd;
	&lt;PoNumber&gt;MOY49&lt;/PoNumber&gt;&#xd;
	&lt;CustomDataFields&gt;&lt;/CustomDataFields&gt;&#xd;
	&lt;ReportNotes&gt;&lt;/ReportNotes&gt;&#xd;
	&lt;EmailNotes&gt;&lt;/EmailNotes&gt;&#xd;
	&lt;ExternalId&gt;Token1&lt;/ExternalId&gt;&#xd;
	&lt;AchPaymentAccount id=&quot;${ACH_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
	&lt;RecurrenceType id=&quot;P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0YsNzkAYBxJF7cOQjFM6pxUlGpvpZpU!!!X7l&quot;/&gt;	&#xd;
	&lt;FrequencyType id=&quot;QDGfoL8MVLK8A49qup7O2vW1kILuFE2EqJLLYVjupqeyiA4J9Y3wXP1iWaa7FcQi&quot; /&gt;&#xd;
	&lt;CreditCardPaymentAccount id=&quot;&quot;/&gt;&#xd;
	&lt;PointOfEntry id=&quot;P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0Ys8z4UUkB6!!!SAwJXGr7p!!!HVal4uYO69Tkv&quot;/&gt;		&#xd;
&lt;/PaymentSchedule&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/paymentschedule</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Post Payment Autopay ACH" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;PaymentSchedule xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
	&lt;PaymentAmount&gt;100&lt;/PaymentAmount&gt;&#xd;
	&lt;OriginalAmount&gt;300&lt;/OriginalAmount&gt;&#xd;
	&lt;OriginalDueAmount&gt;200&lt;/OriginalDueAmount&gt;&#xd;
	&lt;FeePerPayment&gt;1&lt;/FeePerPayment&gt;&#xd;
	&lt;TaxAmountPerPayment&gt;2&lt;/TaxAmountPerPayment&gt;&#xd;
	&lt;TotalPaymentsToPay&gt;3&lt;/TotalPaymentsToPay&gt;&#xd;
	&lt;PaymentsPaid&gt;1&lt;/PaymentsPaid&gt;&#xd;
	&lt;StartDate&gt;${PAYMENT_DATE}&lt;/StartDate&gt;&#xd;
	&lt;InvoiceNumber&gt;T5VC5&lt;/InvoiceNumber&gt;&#xd;
	&lt;PoNumber&gt;MOY49&lt;/PoNumber&gt;&#xd;
	&lt;CustomDataFields&gt;&lt;/CustomDataFields&gt;&#xd;
	&lt;ReportNotes&gt;&lt;/ReportNotes&gt;&#xd;
	&lt;EmailNotes&gt;&lt;/EmailNotes&gt;&#xd;
	&lt;ExternalId&gt;Token1&lt;/ExternalId&gt;&#xd;
	&lt;AchPaymentAccount id=&quot;yHcU7woOkr6piwcY09XoybuvOrVJVs6w3kMMj65CZG7CvUnFb6trnFxc2v8rAbtr&quot;/&gt;&#xd;
	&lt;RecurrenceType id=&quot;p30JQBweOKuZceZ18ML46Z8DU6NeQqG9BBFxKMSyDdW5KC!!!Cw1aK6E17PFGm1Blv&quot;/&gt;	&#xd;
	&lt;FrequencyType id=&quot;QDGfoL8MVLK8A49qup7O2vW1kILuFE2EqJLLYVjupqeyiA4J9Y3wXP1iWaa7FcQi&quot; /&gt;&#xd;
	&lt;CreditCardPaymentAccount id=&quot;&quot;/&gt;&#xd;
	&lt;FeeSchedule id=&quot;k3isJ7gG18g9URAYDVCCw8NP4PXVuq!!!4k!!!aZgsv4PYxnsOQCjB92MgWBPKBfOE0F&quot;/&gt;&#xd;
	&lt;PointOfEntry id=&quot;P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0Ys8z4UUkB6!!!SAwJXGr7p!!!HVal4uYO69Tkv&quot;/&gt;		&#xd;
&lt;/PaymentSchedule&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/paymentschedule</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Post Payment Autopay ACH" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;PaymentSchedule xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
	&lt;InvoiceNumber&gt;T5VC5&lt;/InvoiceNumber&gt;&#xd;
	&lt;PoNumber&gt;MOY49&lt;/PoNumber&gt;	&#xd;
	&lt;ReportNotes&gt;&lt;/ReportNotes&gt;&#xd;
	&lt;EmailNotes&gt;&lt;/EmailNotes&gt;&#xd;
	&lt;ExternalId&gt;Token1&lt;/ExternalId&gt;&#xd;
	&lt;AchSecCode&gt;WEB&lt;/AchSecCode&gt;&#xd;
	&lt;Customer id=&quot;&quot;/&gt; &lt;!-- required --&gt;&#xd;
	&lt;AchPaymentAccount id=&quot;${ACH_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
	&lt;RecurrenceType id=&quot;p30JQBweOKuZceZ18ML46Z8DU6NeQqG9BBFxKMSyDdW5KC!!!Cw1aK6E17PFGm1Blv&quot;/&gt;	&#xd;
	&lt;FrequencyType id=&quot;QDGfoL8MVLK8A49qup7O2vW1kILuFE2EqJLLYVjupqeyiA4J9Y3wXP1iWaa7FcQi&quot; /&gt;&#xd;
&lt;/PaymentSchedule&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/paymentschedule</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Post Payment Autopay CC" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;PaymentSchedule xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
	&lt;PaymentAmount&gt;100&lt;/PaymentAmount&gt;&#xd;
	&lt;OriginalAmount&gt;300&lt;/OriginalAmount&gt;&#xd;
	&lt;OriginalDueAmount&gt;200&lt;/OriginalDueAmount&gt;&#xd;
	&lt;FeePerPayment&gt;1&lt;/FeePerPayment&gt;&#xd;
	&lt;TaxAmountPerPayment&gt;2&lt;/TaxAmountPerPayment&gt;&#xd;
	&lt;TotalPaymentsToPay&gt;3&lt;/TotalPaymentsToPay&gt;&#xd;
	&lt;PaymentsPaid&gt;1&lt;/PaymentsPaid&gt;&#xd;
	&lt;StartDate&gt;${PAYMENT_DATE}&lt;/StartDate&gt;&#xd;
	&lt;InvoiceNumber&gt;T5VC5&lt;/InvoiceNumber&gt;&#xd;
	&lt;PoNumber&gt;MOY49&lt;/PoNumber&gt;&#xd;
	&lt;CustomDataFields&gt;&lt;/CustomDataFields&gt;&#xd;
	&lt;ReportNotes&gt;&lt;/ReportNotes&gt;&#xd;
	&lt;EmailNotes&gt;&lt;/EmailNotes&gt;&#xd;
	&lt;ExternalId&gt;Token1&lt;/ExternalId&gt;&#xd;
	&lt;AchPaymentAccount id=&quot;&quot;/&gt;&#xd;
	&lt;RecurrenceType id=&quot;p30JQBweOKuZceZ18ML46Z8DU6NeQqG9BBFxKMSyDdW5KC!!!Cw1aK6E17PFGm1Blv&quot;/&gt;&#xd;
	&lt;FrequencyType id=&quot;QDGfoL8MVLK8A49qup7O2vW1kILuFE2EqJLLYVjupqeyiA4J9Y3wXP1iWaa7FcQi&quot; /&gt;&#xd;
	&lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
	&lt;PointOfEntry id=&quot;P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0Ys8z4UUkB6!!!SAwJXGr7p!!!HVal4uYO69Tkv&quot;/&gt;		&#xd;
&lt;/PaymentSchedule&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/paymentschedule</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Post Payment Recurring ACH" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;PaymentSchedule xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
	&lt;PaymentAmount&gt;100&lt;/PaymentAmount&gt;&#xd;
	&lt;OriginalAmount&gt;300&lt;/OriginalAmount&gt;&#xd;
	&lt;OriginalDueAmount&gt;200&lt;/OriginalDueAmount&gt;&#xd;
	&lt;FeePerPayment&gt;1&lt;/FeePerPayment&gt;&#xd;
	&lt;TaxAmountPerPayment&gt;2&lt;/TaxAmountPerPayment&gt;&#xd;
	&lt;TotalPaymentsToPay&gt;3&lt;/TotalPaymentsToPay&gt;&#xd;
	&lt;PaymentsPaid&gt;1&lt;/PaymentsPaid&gt;&#xd;
	&lt;StartDate&gt;${PAYMENT_DATE}&lt;/StartDate&gt;&#xd;
	&lt;InvoiceNumber&gt;T5VC5&lt;/InvoiceNumber&gt;&#xd;
	&lt;PoNumber&gt;MOY49&lt;/PoNumber&gt;&#xd;
	&lt;CustomDataFields&gt;&lt;/CustomDataFields&gt;&#xd;
	&lt;ReportNotes&gt;&lt;/ReportNotes&gt;&#xd;
	&lt;EmailNotes&gt;&lt;/EmailNotes&gt;&#xd;
	&lt;ExternalId&gt;Token1&lt;/ExternalId&gt;&#xd;
	&lt;AchPaymentAccount id=&quot;yHcU7woOkr6piwcY09XoybuvOrVJVs6w3kMMj65CZG7CvUnFb6trnFxc2v8rAbtr&quot;/&gt;&#xd;
	&lt;RecurrenceType id=&quot;QDGfoL8MVLK8A49qup7O2vW1kILuFE2EGsRaiiIzvBW2zPDb8NXe8vMQU15lK31p&quot;/&gt;	&#xd;
	&lt;FrequencyType id=&quot;QDGfoL8MVLK8A49qup7O2vW1kILuFE2EqJLLYVjupqeyiA4J9Y3wXP1iWaa7FcQi&quot; /&gt;&#xd;
	&lt;CreditCardPaymentAccount id=&quot;&quot;/&gt;&#xd;
	&lt;FeeSchedule id=&quot;k3isJ7gG18g9URAYDVCCw8NP4PXVuq!!!4k!!!aZgsv4PYxnsOQCjB92MgWBPKBfOE0F&quot;/&gt;&#xd;
	&lt;PointOfEntry id=&quot;P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0Ys8z4UUkB6!!!SAwJXGr7p!!!HVal4uYO69Tkv&quot;/&gt;		&#xd;
&lt;/PaymentSchedule&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/paymentschedule</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Post Payment Recurring ACH" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;PaymentSchedule xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
	&lt;PaymentAmount&gt;100&lt;/PaymentAmount&gt;	&#xd;
	&lt;StartDate&gt;${PAYMENT_DATE}&lt;/StartDate&gt;&#xd;
	&lt;InvoiceNumber&gt;T5VC5&lt;/InvoiceNumber&gt;&#xd;
	&lt;PoNumber&gt;MOY49&lt;/PoNumber&gt;&#xd;
	&lt;CustomDataFields&gt;&lt;/CustomDataFields&gt;&#xd;
	&lt;ReportNotes&gt;&lt;/ReportNotes&gt;&#xd;
	&lt;EmailNotes&gt;&lt;/EmailNotes&gt;&#xd;
	&lt;ExternalId&gt;Token1&lt;/ExternalId&gt;&#xd;
	&lt;AchPaymentAccount id=&quot;${ACH_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
	&lt;RecurrenceType id=&quot;QDGfoL8MVLK8A49qup7O2vW1kILuFE2EGsRaiiIzvBW2zPDb8NXe8vMQU15lK31p&quot;/&gt;	&#xd;
	&lt;FrequencyType id=&quot;QDGfoL8MVLK8A49qup7O2vW1kILuFE2EqJLLYVjupqeyiA4J9Y3wXP1iWaa7FcQi&quot; /&gt;&#xd;
&lt;/PaymentSchedule&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/paymentschedule</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Post Payment Recurring Card" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;PaymentSchedule xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
	&lt;PaymentAmount&gt;100&lt;/PaymentAmount&gt;&#xd;
	&lt;OriginalAmount&gt;300&lt;/OriginalAmount&gt;&#xd;
	&lt;OriginalDueAmount&gt;200&lt;/OriginalDueAmount&gt;&#xd;
	&lt;FeePerPayment&gt;1&lt;/FeePerPayment&gt;&#xd;
	&lt;TaxAmountPerPayment&gt;2&lt;/TaxAmountPerPayment&gt;&#xd;
	&lt;TotalPaymentsToPay&gt;3&lt;/TotalPaymentsToPay&gt;&#xd;
	&lt;PaymentsPaid&gt;1&lt;/PaymentsPaid&gt;&#xd;
	&lt;StartDate&gt;${PAYMENT_DATE}&lt;/StartDate&gt;&#xd;
	&lt;InvoiceNumber&gt;T5VC5&lt;/InvoiceNumber&gt;&#xd;
	&lt;PoNumber&gt;MOY49&lt;/PoNumber&gt;&#xd;
	&lt;CustomDataFields&gt;&lt;/CustomDataFields&gt;&#xd;
	&lt;ReportNotes&gt;&lt;/ReportNotes&gt;&#xd;
	&lt;EmailNotes&gt;&lt;/EmailNotes&gt;&#xd;
	&lt;ExternalId&gt;Token1&lt;/ExternalId&gt;&#xd;
	&lt;AchPaymentAccount id=&quot;&quot;/&gt;&#xd;
	&lt;RecurrenceType id=&quot;QDGfoL8MVLK8A49qup7O2vW1kILuFE2EGsRaiiIzvBW2zPDb8NXe8vMQU15lK31p&quot;/&gt;	&#xd;
	&lt;FrequencyType id=&quot;QDGfoL8MVLK8A49qup7O2vW1kILuFE2EqJLLYVjupqeyiA4J9Y3wXP1iWaa7FcQi&quot; /&gt;&#xd;
	&lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
	&lt;PointOfEntry id=&quot;P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0Ys8z4UUkB6!!!SAwJXGr7p!!!HVal4uYO69Tkv&quot;/&gt;		&#xd;
&lt;/PaymentSchedule&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/paymentschedule</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Post Payment Installment ACH" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;PaymentSchedule xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
	&lt;PaymentAmount&gt;100&lt;/PaymentAmount&gt;&#xd;
	&lt;OriginalAmount&gt;300&lt;/OriginalAmount&gt;&#xd;
	&lt;OriginalDueAmount&gt;200&lt;/OriginalDueAmount&gt;&#xd;
	&lt;FeePerPayment&gt;1&lt;/FeePerPayment&gt;&#xd;
	&lt;TaxAmountPerPayment&gt;2&lt;/TaxAmountPerPayment&gt;&#xd;
	&lt;TotalPaymentsToPay&gt;3&lt;/TotalPaymentsToPay&gt;&#xd;
	&lt;PaymentsPaid&gt;1&lt;/PaymentsPaid&gt;&#xd;
	&lt;StartDate&gt;${PAYMENT_DATE}&lt;/StartDate&gt;&#xd;
	&lt;InvoiceNumber&gt;T5VC5&lt;/InvoiceNumber&gt;&#xd;
	&lt;PoNumber&gt;MOY49&lt;/PoNumber&gt;&#xd;
	&lt;CustomDataFields&gt;&lt;/CustomDataFields&gt;&#xd;
	&lt;ReportNotes&gt;&lt;/ReportNotes&gt;&#xd;
	&lt;EmailNotes&gt;&lt;/EmailNotes&gt;&#xd;
	&lt;ExternalId&gt;Token1&lt;/ExternalId&gt;&#xd;
	&lt;AchPaymentAccount id=&quot;yHcU7woOkr6piwcY09XoybuvOrVJVs6w3kMMj65CZG7CvUnFb6trnFxc2v8rAbtr&quot;/&gt;&#xd;
	&lt;RecurrenceType id=&quot;P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0YsNzkAYBxJF7cOQjFM6pxUlGpvpZpU!!!X7l&quot;/&gt;	&#xd;
	&lt;FrequencyType id=&quot;QDGfoL8MVLK8A49qup7O2vW1kILuFE2EqJLLYVjupqeyiA4J9Y3wXP1iWaa7FcQi&quot; /&gt;&#xd;
	&lt;CreditCardPaymentAccount id=&quot;&quot;/&gt;&#xd;
	&lt;FeeSchedule id=&quot;k3isJ7gG18g9URAYDVCCw8NP4PXVuq!!!4k!!!aZgsv4PYxnsOQCjB92MgWBPKBfOE0F&quot;/&gt;&#xd;
	&lt;PointOfEntry id=&quot;P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0Ys8z4UUkB6!!!SAwJXGr7p!!!HVal4uYO69Tkv&quot;/&gt;		&#xd;
&lt;/PaymentSchedule&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/paymentschedule</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Post Payment Installment ACH" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;PaymentSchedule xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
	&lt;PaymentAmount&gt;100&lt;/PaymentAmount&gt;&#xd;
	&lt;OriginalAmount&gt;300&lt;/OriginalAmount&gt;&#xd;
	&lt;OriginalDueAmount&gt;200&lt;/OriginalDueAmount&gt;	&#xd;
	&lt;TotalPaymentsToPay&gt;3&lt;/TotalPaymentsToPay&gt;	&#xd;
	&lt;StartDate&gt;${PAYMENT_DATE}&lt;/StartDate&gt;&#xd;
	&lt;InvoiceNumber&gt;T5VC5&lt;/InvoiceNumber&gt;&#xd;
	&lt;PoNumber&gt;MOY49&lt;/PoNumber&gt;&#xd;
	&lt;CustomDataFields&gt;&lt;/CustomDataFields&gt;&#xd;
	&lt;ReportNotes&gt;&lt;/ReportNotes&gt;&#xd;
	&lt;EmailNotes&gt;&lt;/EmailNotes&gt;&#xd;
	&lt;ExternalId&gt;Token1&lt;/ExternalId&gt;&#xd;
	&lt;AchPaymentAccount id=&quot;${ACH_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
	&lt;RecurrenceType id=&quot;P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0YsNzkAYBxJF7cOQjFM6pxUlGpvpZpU!!!X7l&quot;/&gt;	&#xd;
	&lt;FrequencyType id=&quot;QDGfoL8MVLK8A49qup7O2vW1kILuFE2EqJLLYVjupqeyiA4J9Y3wXP1iWaa7FcQi&quot; /&gt;&#xd;
&lt;/PaymentSchedule&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/paymentschedule</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Post Payment Installment CC" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;PaymentSchedule xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
	&lt;PaymentAmount&gt;100&lt;/PaymentAmount&gt;&#xd;
	&lt;OriginalAmount&gt;300&lt;/OriginalAmount&gt;&#xd;
	&lt;OriginalDueAmount&gt;200&lt;/OriginalDueAmount&gt;&#xd;
	&lt;FeePerPayment&gt;1&lt;/FeePerPayment&gt;&#xd;
	&lt;TaxAmountPerPayment&gt;2&lt;/TaxAmountPerPayment&gt;&#xd;
	&lt;TotalPaymentsToPay&gt;3&lt;/TotalPaymentsToPay&gt;&#xd;
	&lt;PaymentsPaid&gt;1&lt;/PaymentsPaid&gt;&#xd;
	&lt;StartDate&gt;${PAYMENT_DATE}&lt;/StartDate&gt;&#xd;
	&lt;InvoiceNumber&gt;T5VC5&lt;/InvoiceNumber&gt;&#xd;
	&lt;PoNumber&gt;MOY49&lt;/PoNumber&gt;&#xd;
	&lt;CustomDataFields&gt;&lt;/CustomDataFields&gt;&#xd;
	&lt;ReportNotes&gt;&lt;/ReportNotes&gt;&#xd;
	&lt;EmailNotes&gt;&lt;/EmailNotes&gt;&#xd;
	&lt;ExternalId&gt;Token1&lt;/ExternalId&gt;&#xd;
	&lt;AchPaymentAccount id=&quot;&quot;/&gt;&#xd;
	&lt;RecurrenceType id=&quot;P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0YsNzkAYBxJF7cOQjFM6pxUlGpvpZpU!!!X7l&quot;/&gt;	&#xd;
	&lt;FrequencyType id=&quot;QDGfoL8MVLK8A49qup7O2vW1kILuFE2EqJLLYVjupqeyiA4J9Y3wXP1iWaa7FcQi&quot; /&gt;&#xd;
	&lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
	&lt;PointOfEntry id=&quot;P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0Ys8z4UUkB6!!!SAwJXGr7p!!!HVal4uYO69Tkv&quot;/&gt;		&#xd;
&lt;/PaymentSchedule&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/paymentschedule</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Put Payment Schedule ACH" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;PaymentSchedule xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
	&lt;PaymentAmount&gt;150&lt;/PaymentAmount&gt;&#xd;
	&lt;OriginalAmount&gt;300&lt;/OriginalAmount&gt;	&#xd;
	&lt;AchPaymentAccount id=&quot;e7TlXLaCvkqzKd1kDr01I8rL!!!jPwMEB@@@c5GDgl6ZgiQMVN2xuQRIVimJL6mbFtmSSdnl0GXE1NE=&quot;/&gt;&#xd;
		&#xd;
&lt;/PaymentSchedule&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.225.252</stringProp>
              <stringProp name="HTTPSampler.port">8003</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/paymentschedule/${__urlencode(DcrJeCvbopcIwIlDa26Pgb8@@@hreOxnWkGhdny50rEobJBPynHPkViq06Ot5fXkVXWfZn3qXpYvo=)}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Put Payment Schedule CC" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;PaymentSchedule xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
	&lt;PaymentAmount&gt;75.50&lt;/PaymentAmount&gt;&#xd;
	&lt;OriginalAmount&gt;300&lt;/OriginalAmount&gt;&#xd;
	&lt;OriginalDueAmount&gt;200&lt;/OriginalDueAmount&gt;&#xd;
	&lt;TotalPaymentsToPay&gt;7&lt;/TotalPaymentsToPay&gt;&#xd;
	&lt;StartDate&gt;${PAYMENT_DATE}&lt;/StartDate&gt;&#xd;
	&lt;InvoiceNumber&gt;T5VC5&lt;/InvoiceNumber&gt;&#xd;
	&lt;PoNumber&gt;MOY49&lt;/PoNumber&gt;	&#xd;
	&lt;ReportNotes&gt;Test12&lt;/ReportNotes&gt;&#xd;
	&lt;EmailNotes&gt;Test12&lt;/EmailNotes&gt;	&#xd;
	&lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
	&lt;FeeSchedule id=&quot;${FEE_SCHEDULE_ID}&quot;/&gt;	&#xd;
&lt;/PaymentSchedule&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/paymentschedule/${__urlencode(${PAYMENT_SCHEDULE_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Put Payment Schedule AutoPay" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;PaymentSchedule xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;InvoiceNumber&gt;T5VC5&lt;/InvoiceNumber&gt;&#xd;
  &lt;PoNumber&gt;MOY49&lt;/PoNumber&gt;&#xd;
  &lt;ReportNotes&gt;ReportNotes1&lt;/ReportNotes&gt;&#xd;
  &lt;EmailNotes&gt;EmailNotes1&lt;/EmailNotes&gt;&#xd;
  &lt;Active&gt;false&lt;/Active&gt; &#xd;
  &lt;ExternalId&gt;Token1&lt;/ExternalId&gt; &#xd;
  &lt;AchSecCode&gt;Token1&lt;/AchSecCode&gt; &#xd;
  &lt;AchPaymentAccount id=&quot;Token1&quot;/&gt; &#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt; &#xd;
  &lt;FeeSchedule id=&quot;${FEE_SCHEDULE_ID}&quot;/&gt; &#xd;
&lt;/PaymentSchedule&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/paymentschedule/${__urlencode(${PAYMENT_SCHEDULE_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Put Payment Schedule ACH" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;PaymentSchedule xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
	&lt;PaymentAmount&gt;75.50&lt;/PaymentAmount&gt;&#xd;
	&lt;OriginalAmount&gt;300&lt;/OriginalAmount&gt;&#xd;
	&lt;OriginalDueAmount&gt;200&lt;/OriginalDueAmount&gt;&#xd;
	&lt;TotalPaymentsToPay&gt;7&lt;/TotalPaymentsToPay&gt;&#xd;
	&lt;StartDate&gt;${PAYMENT_DATE}&lt;/StartDate&gt;&#xd;
	&lt;InvoiceNumber&gt;T5VC5&lt;/InvoiceNumber&gt;&#xd;
	&lt;PoNumber&gt;MOY49&lt;/PoNumber&gt;	&#xd;
	&lt;ReportNotes&gt;Test12&lt;/ReportNotes&gt;&#xd;
	&lt;EmailNotes&gt;Test12&lt;/EmailNotes&gt;&#xd;
	&lt;Active&gt;true&lt;/Active&gt;&#xd;
	&lt;ExternalId&gt;03020000000248&lt;/ExternalId&gt;&#xd;
	&lt;AchSecCode&gt;SEC&lt;/AchSecCode&gt;		&#xd;
	&lt;AchPaymentAccount id=&quot;${ACH_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
	&lt;FeeSchedule id=&quot;k3isJ7gG18g9URAYDVCCw8NP4PXVuq!!!4k!!!aZgsv4PYxnsOQCjB92MgWBPKBfOE0F&quot;/&gt;	&#xd;
&lt;/PaymentSchedule&gt;&#xd;
&#xd;
  &#xd;
&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/paymentschedule/${__urlencode(${PAYMENT_SCHEDULE_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Put Payment Schedule ACH Inactive " enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;PaymentSchedule xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
	&lt;PaymentAmount&gt;75.50&lt;/PaymentAmount&gt;&#xd;
	&lt;OriginalAmount&gt;300&lt;/OriginalAmount&gt;&#xd;
	&lt;OriginalDueAmount&gt;200&lt;/OriginalDueAmount&gt;&#xd;
	&lt;TotalPaymentsToPay&gt;7&lt;/TotalPaymentsToPay&gt;&#xd;
	&lt;StartDate&gt;${PAYMENT_DATE}&lt;/StartDate&gt;&#xd;
	&lt;InvoiceNumber&gt;T5VC5&lt;/InvoiceNumber&gt;&#xd;
	&lt;PoNumber&gt;MOY49&lt;/PoNumber&gt;	&#xd;
	&lt;ReportNotes&gt;Test12&lt;/ReportNotes&gt;&#xd;
	&lt;EmailNotes&gt;Test12&lt;/EmailNotes&gt;&#xd;
	&lt;Active&gt;false&lt;/Active&gt;&#xd;
	&lt;ExternalId&gt;03020000000248&lt;/ExternalId&gt;&#xd;
	&lt;AchSecCode&gt;SEC&lt;/AchSecCode&gt;		&#xd;
	&lt;AchPaymentAccount id=&quot;${ACH_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
	&lt;FeeSchedule id=&quot;k3isJ7gG18g9URAYDVCCw8NP4PXVuq!!!4k!!!aZgsv4PYxnsOQCjB92MgWBPKBfOE0F&quot;/&gt;	&#xd;
&lt;/PaymentSchedule&gt;&#xd;
&#xd;
  &#xd;
&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/paymentschedule/${__urlencode(${PAYMENT_SCHEDULE_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Put Payment Schedule Recurring" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;PaymentSchedule xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;	&#xd;
  &lt;PaymentAmount&gt;0.01&lt;/PaymentAmount&gt;&#xd;
  &lt;StartDate&gt;1900-01-23T01:01:01-07:00&lt;/StartDate&gt; &#xd;
  &lt;InvoiceNumber&gt;T5VC5&lt;/InvoiceNumber&gt; &#xd;
  &lt;PoNumber&gt;MOY49&lt;/PoNumber&gt; &#xd;
  &lt;ReportNotes&gt;ReportNotes1&lt;/ReportNotes&gt; &#xd;
  &lt;EmailNotes&gt;EmailNotes1&lt;/EmailNotes&gt; &#xd;
  &lt;Active&gt;false&lt;/Active&gt; &#xd;
  &lt;AchSecCode&gt;Token1&lt;/AchSecCode&gt; &#xd;
  &lt;AchPaymentAccount id=&quot;Token1&quot;/&gt; &#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt; &#xd;
  &lt;FeeSchedule id=&quot;${FEE_SCHEDULE_ID}&quot;/&gt; 	&#xd;
&lt;/PaymentSchedule&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/paymentschedule/${__urlencode(${PAYMENT_SCHEDULE_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Put Payment Schedule Installment" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;PaymentSchedule xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;	&#xd;
  &lt;PaymentAmount&gt;0.01&lt;/PaymentAmount&gt;  &#xd;
  &lt;OriginalAmount&gt;0.01&lt;/OriginalAmount&gt;  &#xd;
  &lt;OriginalDueAmount&gt;0.01&lt;/OriginalDueAmount&gt; &#xd;
  &lt;TotalPaymentsToPay&gt;1&lt;/TotalPaymentsToPay&gt; &#xd;
  &lt;StartDate&gt;1900-01-23T01:01:01-07:00&lt;/StartDate&gt; &#xd;
  &lt;InvoiceNumber&gt;T5VC5&lt;/InvoiceNumber&gt;&#xd;
  &lt;PoNumber&gt;MOY49&lt;/PoNumber&gt; &#xd;
  &lt;ReportNotes&gt;ReportNotes1&lt;/ReportNotes&gt;  &#xd;
  &lt;EmailNotes&gt;EmailNotes1&lt;/EmailNotes&gt; &#xd;
  &lt;ExternalId&gt;Token1&lt;/ExternalId&gt;  &#xd;
  &lt;AchSecCode&gt;Token1&lt;/AchSecCode&gt; &#xd;
  &lt;AchPaymentAccount id=&quot;Token1&quot;/&gt; &#xd;
  &lt;CreditCardPaymentAccount id=&quot;${CREDIT_CARD_PAYMENT_ACCOUNT_ID}&quot;/&gt; &#xd;
  &lt;FeeSchedule id=&quot;${FEE_SCHEDULE_ID}&quot;/&gt;&#xd;
&lt;/PaymentSchedule&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/paymentschedule/${__urlencode(${PAYMENT_SCHEDULE_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CAP" enabled="false">
            <stringProp name="TestPlan.comments">Customer, Account, Payment</stringProp>
          </GenericController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET creditcardpayments" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayments</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
                <stringProp name="RegexExtractor.refname">CREDIT_CARD_PAYMENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">CreditCardPayment id=&quot;(.*)&quot; href</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
                <stringProp name="Scope.variable">CREDIT_CARD_PAYMENT_ID</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Conditionally Get a CREDIT_CARD_PAYMENT_ID" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="764597751">Test Plan</stringProp>
                <stringProp name="-1714733267">Test Library</stringProp>
                <stringProp name="66482">CAP</stringProp>
                <stringProp name="-990106573">Conditionally Get a CREDIT_CARD_PAYMENT_ID</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Conditionally Get a ACH_PAYMENT_ID" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="764597751">Test Plan</stringProp>
                <stringProp name="-1714733267">Test Library</stringProp>
                <stringProp name="66482">CAP</stringProp>
                <stringProp name="1161088905">Conditionally Get an ACH_PAYMENT_ID</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET Credit Card Cap" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/cap/${__urlencode(${CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Customer Account Payment</stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET Credit Card Caps Filtered " enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="fields" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">CustomerAccountPayment(Customer(firstName lastName) CreditCardPaymentAccount(name) CreditCardPayment(amount))</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">fields</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/caps</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Customer Account Payment</stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET Credit Card Caps" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/caps</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Customer Account Payment</stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET ACH Caps" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/caps</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Customer Account Payment</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ACH_PAYMENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;CustomerAccountPayment id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET Ach Cap" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/cap/${__urlencode(${ACH_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Customer Account Payment</stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST CC CAP" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;CustomerAccountPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;Customer&gt;&#xd;
    &lt;ExternalId&gt;abc12345&lt;/ExternalId&gt;&#xd;
    &lt;FirstName&gt;raman&lt;/FirstName&gt;&#xd;
    &lt;LastName&gt;doe&lt;/LastName&gt;&#xd;
    &lt;Street1&gt;5800 NW 39th AVE&lt;/Street1&gt;&#xd;
    &lt;City&gt;Gainesville&lt;/City&gt;&#xd;
    &lt;Zip&gt;32606&lt;/Zip&gt;&#xd;
    &lt;Country&gt;US&lt;/Country&gt;&#xd;
    &lt;PhoneNumber&gt;8011235455&lt;/PhoneNumber&gt;&#xd;
    &lt;EmailAddress&gt;customer@gmail.com&lt;/EmailAddress&gt;&#xd;
    &lt;ProcessingAccountId&gt;${PROCESSING_ACCOUNT_ID}&lt;/ProcessingAccountId&gt;&#xd;
  &lt;/Customer&gt;&#xd;
  &lt;CreditCardPaymentAccount&gt;&#xd;
    &lt;Name&gt;My Visa Card&lt;/Name&gt;&#xd;
    &lt;CardNumber&gt;4111111111111111&lt;/CardNumber&gt;&#xd;
    &lt;ExpiredDate&gt;2019-12-26T21:32:52&lt;/ExpiredDate&gt;&#xd;
    &lt;NameOnCard&gt;Joe Doe&lt;/NameOnCard&gt;&#xd;
  &lt;/CreditCardPaymentAccount&gt;&#xd;
  &lt;CreditCardPayments&gt;&#xd;
    &lt;CreditCardPayment&gt;&#xd;
      &lt;Amount&gt;15.00&lt;/Amount&gt;&#xd;
    &lt;/CreditCardPayment&gt;&#xd;
  &lt;/CreditCardPayments&gt;&#xd;
&lt;/CustomerAccountPayment&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/cap</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST ACH CAP" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;CustomerAccountPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;Customer&gt;&#xd;
    &lt;ExternalId&gt;abc123456&lt;/ExternalId&gt;&#xd;
    &lt;FirstName&gt;Raman&lt;/FirstName&gt;&#xd;
    &lt;LastName&gt;Doe&lt;/LastName&gt;&#xd;
    &lt;Street1&gt;5800 NW 39th AVE&lt;/Street1&gt;&#xd;
    &lt;City&gt;Gainesville&lt;/City&gt;&#xd;
    &lt;Zip&gt;32606&lt;/Zip&gt;&#xd;
    &lt;Country&gt;US&lt;/Country&gt;&#xd;
    &lt;PhoneNumber&gt;8011235455&lt;/PhoneNumber&gt;&#xd;
    &lt;EmailAddress&gt;customer@gmail.com&lt;/EmailAddress&gt;&#xd;
    &lt;ProcessingAccountId&gt;${PROCESSING_ACCOUNT_ID}&lt;/ProcessingAccountId&gt;&#xd;
  &lt;/Customer&gt;&#xd;
  &lt;AchPaymentAccount&gt;&#xd;
    &lt;RoutingNumber&gt;124000054&lt;/RoutingNumber&gt;&#xd;
    &lt;AccountNumber&gt;1234561234&lt;/AccountNumber&gt;&#xd;
    &lt;Name&gt;My WF Checking xxxxx1234&lt;/Name&gt;&#xd;
    &lt;NameOnAccount&gt;Joe Doe&lt;/NameOnAccount&gt;&#xd;
    &lt;/AchPaymentAccount&gt;&#xd;
  &lt;AchPayments&gt;&#xd;
    &lt;AchPayment&gt;&#xd;
      &lt;Amount&gt;15.00&lt;/Amount&gt;&#xd;
    &lt;/AchPayment&gt;&#xd;
  &lt;/AchPayments&gt;&#xd;
&lt;/CustomerAccountPayment&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/cap</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET autopay paymentschedules" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="filter" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">recurrenceType:${AUTOPAY_RECURRENCE_TYPE}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">filter</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/paymentschedules</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Customer ID Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">CUSTOMER_ID</stringProp>
                <stringProp name="RegexExtractor.regex">[&lt;:]Customer .*?id=&quot;(.*?)&quot; href</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">true</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST CC AutoPay CAP" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;CustomerAccountPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot; successUrl=&quot;http://accountis.net/PageToDisplayToUser &quot; failureUrl=&quot;http://accountis.net/PageToDisplayToUser &quot; returnUrl=&quot;http://accountis.net/PageToDisplayToUser&quot; processingUrl=&quot;http//accountis.net/PaymentProcessingDirectory&quot;&gt;&#xd;
	&lt;Customer id=&quot;${CUSTOMER_ID}&quot; /&gt;&#xd;
	&lt;Payment&gt;&#xd;
		&lt;AmexTaa1&gt;1504861694 P 1 389.17&lt;/AmexTaa1&gt;&#xd;
		&lt;AmexTaa2&gt;WV1502022906&lt;/AmexTaa2&gt;&#xd;
		&lt;AmexTaa3&gt;Winchester, VA Salt Lake City, UT&lt;/AmexTaa3&gt;&#xd;
		&lt;AmexTaa4&gt;10-10-2014 PP874518 PP874518&lt;/AmexTaa4&gt;&#xd;
		&lt;Amount&gt;389.17&lt;/Amount&gt;&#xd;
		&lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
		&lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
		&lt;CustomDataFields&gt;&#xd;
			&lt;CustomDataField&gt;&#xd;
				&lt;Name&gt;Invoice Date&lt;/Name&gt;&#xd;
				&lt;Value&gt;2014-10-28T06:17:53.848Z&lt;/Value&gt;&#xd;
			&lt;/CustomDataField&gt;&#xd;
			&lt;CustomDataField&gt;&#xd;
				&lt;Name&gt;Invoice Due Date&lt;/Name&gt;&#xd;
				&lt;Value&gt;2014-10-28T06:17:53.848Z&lt;/Value&gt;&#xd;
			&lt;/CustomDataField&gt;&#xd;
			&lt;CustomDataField&gt;&#xd;
				&lt;Name&gt;EBPPBatchID&lt;/Name&gt;&#xd;
				&lt;Value&gt;55&lt;/Value&gt;&#xd;
			&lt;/CustomDataField&gt;&#xd;
			&lt;CustomDataField&gt;&#xd;
				&lt;Name&gt;Channel&lt;/Name&gt;&#xd;
				&lt;Value&gt;PrintPost&lt;/Value&gt;&#xd;
			&lt;/CustomDataField&gt;&#xd;
			&lt;CustomDataField&gt;&#xd;
				&lt;Name&gt;EBPPUserName&lt;/Name&gt;&#xd;
				&lt;Value&gt;john.doe@gmail.com&lt;/Value&gt;&#xd;
			&lt;/CustomDataField&gt;&#xd;
			&lt;CustomDataField&gt;&#xd;
				&lt;Name&gt;FirstName&lt;/Name&gt;&#xd;
				&lt;Value&gt;John&lt;/Value&gt;&#xd;
			&lt;/CustomDataField&gt;&#xd;
			&lt;CustomDataField&gt;&#xd;
				&lt;Name&gt;LastName&lt;/Name&gt;&#xd;
				&lt;Value&gt;Doe&lt;/Value&gt;&#xd;
			&lt;/CustomDataField&gt;&#xd;
			&lt;CustomDataField&gt;&#xd;
				&lt;Name&gt;DHLAdmin&lt;/Name&gt;&#xd;
				&lt;Value&gt;&lt;/Value&gt;&#xd;
			&lt;/CustomDataField&gt;&#xd;
			&lt;CustomDataField&gt;&#xd;
				&lt;Name&gt;AirWayBillNumbers&lt;/Name&gt;&#xd;
				&lt;Value&gt;1504861694&lt;/Value&gt;&#xd;
			&lt;/CustomDataField&gt;&#xd;
		&lt;/CustomDataFields&gt;&#xd;
		&lt;CustomerReferenceNumber&gt;WV1502022906&lt;/CustomerReferenceNumber&gt;&#xd;
		&lt;DestinationCountryCode&gt;USA&lt;/DestinationCountryCode&gt;&#xd;
		&lt;DestinationPostalCode&gt;84101&lt;/DestinationPostalCode&gt;&#xd;
		&lt;FreightAmount&gt;389.17&lt;/FreightAmount&gt;&#xd;
		&lt;GrandTotalAmount&gt;389.17&lt;/GrandTotalAmount&gt;&#xd;
		&lt;InvoiceNumber&gt;14958660&lt;/InvoiceNumber&gt;&#xd;
		&lt;OrderNumber&gt;14958660&lt;/OrderNumber&gt;&#xd;
		&lt;PaymentLvl3Items&gt;&#xd;
			&lt;PaymentLvl3Item&gt;&#xd;
				&lt;CommodityCode&gt;35184&lt;/CommodityCode&gt;&#xd;
				&lt;ProductDescription&gt;1504861694&lt;/ProductDescription&gt;&#xd;
				&lt;ProductCode&gt;P&lt;/ProductCode&gt;&#xd;
				&lt;Qty&gt;1&lt;/Qty&gt;&#xd;
				&lt;UnitOfMeasure&gt;LBS&lt;/UnitOfMeasure&gt;&#xd;
				&lt;UnitPrice&gt;389.17&lt;/UnitPrice&gt;&#xd;
				&lt;DiscountAmount&gt;0.00&lt;/DiscountAmount&gt;&#xd;
				&lt;DiscountIndicator&gt;N&lt;/DiscountIndicator&gt;&#xd;
				&lt;DiscountRate&gt;0.0&lt;/DiscountRate&gt;&#xd;
				&lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
				&lt;ItemReferenceNumber&gt;1504861694&lt;/ItemReferenceNumber&gt;&#xd;
				&lt;TaxAmount&gt;0.00&lt;/TaxAmount&gt;&#xd;
				&lt;TaxRate&gt;0.0&lt;/TaxRate&gt;&#xd;
				&lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
				&lt;Amount&gt;389.17&lt;/Amount&gt;&#xd;
			&lt;/PaymentLvl3Item&gt;&#xd;
		&lt;/PaymentLvl3Items&gt;&#xd;
		&lt;PoNumber&gt;WV1502022906&lt;/PoNumber&gt;&#xd;
		&lt;ShipFromPostalCode&gt;22602&lt;/ShipFromPostalCode&gt;&#xd;
		&lt;TaxRate&gt;0.17&lt;/TaxRate&gt;&#xd;
	&lt;/Payment&gt;&#xd;
&lt;/CustomerAccountPayment&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/cap</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Custom Field" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET customfields" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/customfields</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">CUSTOM_FIELD_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;CustomDataField id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET customfield" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/customfield/${CUSTOM_FIELD_ID}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Enroll" enabled="false">
            <stringProp name="TestPlan.comments">Since POST and DELETE are tested as part of setup and cleanup we only test PUT here.</stringProp>
          </GenericController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET token" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/token</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">X-TT-APIKEY</stringProp>
                    <stringProp name="Header.value">${API_KEY}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT enroll" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;EnrollRequest xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;UserName&gt;${USER_NAME}&lt;/UserName&gt;&#xd;
  &lt;Password&gt;${PASSWORD}&lt;/Password&gt;&#xd;
  &lt;ApiKeyName&gt;${API_KEY_NAME}&lt;/ApiKeyName&gt;&#xd;
  &lt;ProcessingAccountId&gt;${PROCESSING_ACCOUNT_ID}&lt;/ProcessingAccountId&gt;&#xd;
  &lt;ApiKey&gt;${API_KEY}&lt;/ApiKey&gt;&#xd;
&lt;/EnrollRequest&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/enroll</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">X-TT-APIKEY</stringProp>
                    <stringProp name="Header.value">${API_KEY}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">X-TT-SESSIONTOKEN</stringProp>
                    <stringProp name="Header.value">${SESSION_TOKEN}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="User" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="temp POST user" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;User xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;Username&gt;${RANDOM_USER_NAME}&lt;/Username&gt;&#xd;
  &lt;Password&gt;1${RANDOM_USER_NAME}&lt;/Password&gt;&#xd;
  &lt;Customers&gt;&lt;Customer id=&quot;${CUSTOMER_ID}&quot;/&gt;&lt;/Customers&gt;&#xd;
  &lt;FirstName&gt;First&lt;/FirstName&gt;&#xd;
  &lt;LastName&gt;Last&lt;/LastName&gt;&#xd;
  &lt;EmailAddress&gt;${RANDOM_USER_NAME}@${RANDOM_USER_NAME}.${RANDOM_USER_NAME}&lt;/EmailAddress&gt;&#xd;
&lt;/User&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/user</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_USER_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;User .* id=&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST user" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;User xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;Username&gt;${RANDOM_USER_NAME}&lt;/Username&gt;&#xd;
  &lt;Password&gt;1${RANDOM_USER_NAME}&lt;/Password&gt;&#xd;
  &lt;FirstName&gt;First&lt;/FirstName&gt;&#xd;
  &lt;LastName&gt;Last&lt;/LastName&gt;&#xd;
  &lt;EmailAddress&gt;${RANDOM_USER_NAME}@${RANDOM_USER_NAME}.${RANDOM_USER_NAME}&lt;/EmailAddress&gt;&#xd;
&lt;/User&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/user</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_USER_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;User .* id=&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET user" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/user/${__urlencode(${NEW_USER_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT user" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;User xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;FirstName&gt;NewFirst&lt;/FirstName&gt;&#xd;
&lt;/User&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/user/${__urlencode(${NEW_USER_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">This test should fail with 405</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="51513">405</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE user" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/user/${__urlencode(${NEW_USER_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Complex Types Filter Tests" enabled="false"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Processing Account" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET processingaccounts" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/sbps/api/processingaccounts</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET processingaccounts-OrganizationType" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/sbps/api/processingaccounts?filter=OrganizationType:p30JQBweOKuZceZ18ML46Z8DU6NeQqG9!!!RQ4rkHzNeELA@@@tT71amTXZgC3yQ@@@emu</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Customer Filtering" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET customers" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/sbps/api/customers</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
                  <stringProp name="RegexExtractor.refname">CREDIT_CARD_PAYMENT_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">CreditCardPayment id=&quot;(.*)&quot; href</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">0</stringProp>
                  <stringProp name="Scope.variable">CREDIT_CARD_PAYMENT_ID</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET customers-CustomerType" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/sbps/api/customers?filter=CustomerType:QDGfoL8MVLK8A49qup7O2vW1kILuFE2Eq@@@mN2A2Ry675uafX0s7TLwl4yqMSsQ0f</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
                  <stringProp name="RegexExtractor.refname">CREDIT_CARD_PAYMENT_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">CreditCardPayment id=&quot;(.*)&quot; href</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">0</stringProp>
                  <stringProp name="Scope.variable">CREDIT_CARD_PAYMENT_ID</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Ach Filtering" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET achpaymentaccounts" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/sbps/api/achpaymentaccounts</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">ACH_PAYMENT_ACCOUNT_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">&lt;AchPaymentAccount id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET achpaymentaccounts-Customer" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/sbps/api/achpaymentaccounts?filter=Customer:GA65sBkIivUnyw!!!LLWMReSqxD9R7w@@@RBY0DWQCSOEiSby3mzwbpBMA==</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">ACH_PAYMENT_ACCOUNT_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">&lt;AchPaymentAccount id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET achpaymentaccounts-BankAccountType" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/sbps/api/achpaymentaccounts?filter=BankAccountType:QDGfoL8MVLK8A49qup7O2vW1kILuFE2Eow8hlnsY@@@l1jYzkwG68DCa19YlM6bgcT</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">ACH_PAYMENT_ACCOUNT_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">&lt;AchPaymentAccount id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET achpaymentaccounts-User" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/sbps/api/achpaymentaccounts?filter=User:FB!!!XmdyU0S1@@@@@@SD5aIjp0LoiJT7xlT2LkkQvlN3ELYf3ecgj@@@I0gaQ==</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">ACH_PAYMENT_ACCOUNT_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">&lt;AchPaymentAccount id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET achpayments" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/sbps/api/achpayments</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
                  <stringProp name="RegexExtractor.refname">CREDIT_CARD_PAYMENT_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">CreditCardPayment id=&quot;(.*)&quot; href</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">0</stringProp>
                  <stringProp name="Scope.variable">CREDIT_CARD_PAYMENT_ID</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET achpayments-AchPaymentStatus" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/sbps/api/achpayments?filter=AchPaymentStatus:jzLm4a9!!!m1iEGpry1OHUHL!!!XMr3LlcJD7Umfu3SI1Ff5DGIOsxCHx2KuNcxyBJAq</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
                  <stringProp name="RegexExtractor.refname">CREDIT_CARD_PAYMENT_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">CreditCardPayment id=&quot;(.*)&quot; href</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">0</stringProp>
                  <stringProp name="Scope.variable">CREDIT_CARD_PAYMENT_ID</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET achpayments-PaymentTransactionType" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/sbps/api/achpayments?filter=PaymentTransactionType:p30JQBweOKuZceZ18ML46Z8DU6NeQqG9CLmL!!!1jFrSmmlwhZFxL6tLys2lCB8yevTrrtG69ap4s=</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
                  <stringProp name="RegexExtractor.refname">CREDIT_CARD_PAYMENT_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">CreditCardPayment id=&quot;(.*)&quot; href</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">0</stringProp>
                  <stringProp name="Scope.variable">CREDIT_CARD_PAYMENT_ID</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET achpayments-PointOfEntry" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/sbps/api/achpayments?filter=PointOfEntry:QDGfoL8MVLK8A49qup7O2vW1kILuFE2EiMkMliqW3tqjlEtgVSsd4A6Huo8iMrAP</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
                  <stringProp name="RegexExtractor.refname">CREDIT_CARD_PAYMENT_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">CreditCardPayment id=&quot;(.*)&quot; href</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">0</stringProp>
                  <stringProp name="Scope.variable">CREDIT_CARD_PAYMENT_ID</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CC Filtering" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET creditcardpaymentaccounts" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/sbps/api/creditcardpaymentaccounts</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">CREDIT_CARD_PAYMENT_ACCOUNT_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">&lt;CreditCardPaymentAccount id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET creditcardpaymentaccounts-Customer" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/sbps/api/creditcardpaymentaccounts?filter=Customer:GA65sBkIivUnyw!!!LLWMReSqxD9R7w@@@RBY0DWQCSOEiSby3mzwbpBMA==</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">CREDIT_CARD_PAYMENT_ACCOUNT_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">&lt;CreditCardPaymentAccount id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET creditcardpaymentaccounts-CreditCardType" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/sbps/api/creditcardpaymentaccounts?filter=CreditCardType:8IbQ47tlirrzpU4yXKon0pNz53euZH9yaUmUrYAivp5NqGGRcn77V03iwaze1!!!ac</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">CREDIT_CARD_PAYMENT_ACCOUNT_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">&lt;CreditCardPaymentAccount id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET creditcardpaymentaccounts-User" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/sbps/api/creditcardpaymentaccounts?filter=User:QDGfoL8MVLK8A49qup7O2vW1kILuFE2E5P9KeUfVx9jnhkjiAuXnFQ==</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">CREDIT_CARD_PAYMENT_ACCOUNT_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">&lt;CreditCardPaymentAccount id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET creditcardpayments" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayments</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
                  <stringProp name="RegexExtractor.refname">CREDIT_CARD_PAYMENT_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">CreditCardPayment id=&quot;(.*)&quot; href</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">0</stringProp>
                  <stringProp name="Scope.variable">CREDIT_CARD_PAYMENT_ID</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET creditcardpayments-CreditCardPaymentStatus" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayments?filter=CreditCardPaymentStatus:QDGfoL8MVLK8A49qup7O2vW1kILuFE2EL49vG2PSnosHxtHgUxMFrME3nebPLDHv</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
                  <stringProp name="RegexExtractor.refname">CREDIT_CARD_PAYMENT_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">CreditCardPayment id=&quot;(.*)&quot; href</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">0</stringProp>
                  <stringProp name="Scope.variable">CREDIT_CARD_PAYMENT_ID</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET creditcardpayments-PaymentTransactionType" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayments?filter=PaymentTransactionType:QDGfoL8MVLK8A49qup7O2vW1kILuFE2ELUGloEB0TwD1!!!Hh3rKdoea8wniABp4xQXGhg92AyK9c=</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
                  <stringProp name="RegexExtractor.refname">CREDIT_CARD_PAYMENT_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">CreditCardPayment id=&quot;(.*)&quot; href</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">0</stringProp>
                  <stringProp name="Scope.variable">CREDIT_CARD_PAYMENT_ID</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET creditcardpayments-PointOfEntry" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayments?filter=PointOfEntry:QDGfoL8MVLK8A49qup7O2vW1kILuFE2EiMkMliqW3tqjlEtgVSsd4A6Huo8iMrAP</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
                  <stringProp name="RegexExtractor.refname">CREDIT_CARD_PAYMENT_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">CreditCardPayment id=&quot;(.*)&quot; href</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">0</stringProp>
                  <stringProp name="Scope.variable">CREDIT_CARD_PAYMENT_ID</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="PaymentSchedule Filtering" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET paymentschedules" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/sbps/api/paymentschedules?expand=PaymentSchedule</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">CREDIT_CARD_PAYMENT_ACCOUNT_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">&lt;CreditCardPaymentAccount id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET paymentschedules-RecurrenceType" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/sbps/api/paymentschedules?filter=RecurrenceType:P2EqpaxBJf3aIKcOBazAh!!!XTSthTC0YsNzkAYBxJF7cOQjFM6pxUlGpvpZpU!!!X7l</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
                  <stringProp name="RegexExtractor.refname">CREDIT_CARD_PAYMENT_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">CreditCardPayment id=&quot;(.*)&quot; href</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">0</stringProp>
                  <stringProp name="Scope.variable">CREDIT_CARD_PAYMENT_ID</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GETpaymentschedules-FrequencyType" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/sbps/api/paymentschedules?filter=FrequencyType:YH@@@C1gCA5LeFQ52IDytTyubBdYVgqGeE9KPFeY8iuMIVJ@@@Bi4s439smNbQl1FPTa</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
                  <stringProp name="RegexExtractor.refname">CREDIT_CARD_PAYMENT_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">CreditCardPayment id=&quot;(.*)&quot; href</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">0</stringProp>
                  <stringProp name="Scope.variable">CREDIT_CARD_PAYMENT_ID</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="cleanup: Delete enrollment" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE enroll" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/enroll</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Accountis AutoPay Flow" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step 1 GET token" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/token</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">SESSION_TOKEN</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;SessionToken.*?\&gt;(.*)&lt;/SessionToken&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step 2 POST new AutoPay Admin user" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;User xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;Username&gt;${RANDOM_USER_NAME}&lt;/Username&gt;&#xd;
  &lt;Password&gt;1${RANDOM_USER_NAME}&lt;/Password&gt;&#xd;
  &lt;FirstName&gt;First&lt;/FirstName&gt;&#xd;
  &lt;LastName&gt;Last&lt;/LastName&gt;&#xd;
  &lt;EmailAddress&gt;${RANDOM_USER_NAME}@fundtech.com&lt;/EmailAddress&gt;&#xd;
&lt;/User&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/user</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_USER_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;User .* id=&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step 3 POST NEW network account customer" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;Customer xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;ExternalId&gt;NetworkAccountId&lt;/ExternalId&gt;&#xd;
  &lt;Users&gt;&#xd;
  	&lt;User id=&quot;${NEW_USER_ID}&quot; /&gt;&#xd;
  &lt;/Users&gt;&#xd;
  &lt;FirstName&gt;Jill&lt;/FirstName&gt;&#xd;
  &lt;LastName&gt;Brown&lt;/LastName&gt;&#xd;
  &lt;Street1&gt;5800 NW 39th AVE&lt;/Street1&gt;&#xd;
  &lt;City&gt;Gainsville&lt;/City&gt;&#xd;
  &lt;State&gt;FL&lt;/State&gt;&#xd;
  &lt;Zip&gt;32606&lt;/Zip&gt;&#xd;
  &lt;Country&gt;US&lt;/Country&gt;&#xd;
  &lt;PhoneNumber&gt;(351) 862-9331&lt;/PhoneNumber&gt;&#xd;
  &lt;EmailAddress&gt;allison.hodge@mail.com&lt;/EmailAddress&gt;&#xd;
  &lt;Status&gt;1&lt;/Status&gt;&#xd;
  &lt;CustomerType id=&quot;QDGfoL8MVLK8A49qup7O2vW1kILuFE2Eq@@@mN2A2Ry675uafX0s7TLwl4yqMSsQ0f&quot;/&gt;&#xd;
&lt;/Customer&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/customer</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_CUSTOMER_ID</stringProp>
                <stringProp name="RegexExtractor.regex">[&lt;:]Customer .*?id=&quot;(.*)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="TestPlan.comments">Fix to &lt;User .* id=&quot;(.*)&quot; href=&quot;.*&quot;&gt; once user has href set</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step 4 POST achpaymentaccount" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;AchPaymentAccount xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
  &lt;RoutingNumber&gt;121042882&lt;/RoutingNumber&gt;&#xd;
  &lt;AccountNumber&gt;3116008329&lt;/AccountNumber&gt;&#xd;
  &lt;Name&gt;CHECKING xxxxx8329&lt;/Name&gt;&#xd;
  &lt;NameOnAccount&gt;Jack Brown&lt;/NameOnAccount&gt;&#xd;
  &lt;User id=&quot;${NEW_USER_ID}&quot;/&gt;&#xd;
  &lt;BankAccountType id=&quot;${BANK_ACCOUNT_TYPE_CHECKING}&quot;/&gt;&#xd;
&lt;/AchPaymentAccount&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/achpaymentaccount</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">NEW_ACH_PAYMENT_ACCOUNT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">AchPaymentAccount .* id=&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step 5 Post Autopay Configuration ACH" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;PaymentSchedule xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
	&lt;Customer id=&quot;${NEW_CUSTOMER_ID}&quot;/&gt;&#xd;
	&lt;AchPaymentAccount id=&quot;${NEW_ACH_PAYMENT_ACCOUNT_ID}&quot;/&gt;&#xd;
	&lt;RecurrenceType id=&quot;p30JQBweOKuZceZ18ML46Z8DU6NeQqG9BBFxKMSyDdW5KC!!!Cw1aK6E17PFGm1Blv&quot;/&gt;	&#xd;
	&lt;FrequencyType id=&quot;QDGfoL8MVLK8A49qup7O2vW1kILuFE2EqJLLYVjupqeyiA4J9Y3wXP1iWaa7FcQi&quot; /&gt;&#xd;
&lt;/PaymentSchedule&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/paymentschedule</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step 6 GET customers by network account id" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="filter" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">externalId:NetworkAccountId</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">filter</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/customers</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step 7 POST CC AutoPay CAP" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;CustomerAccountPayment xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot; successUrl=&quot;http://accountis.net/successCallback &quot; failureUrl=&quot;http://accountis.net/failureCallback &quot; returnUrl=&quot;http://accountis.net/PageToDisplayToUser&quot;&gt;&#xd;
	&lt;Customer id=&quot;${NEW_CUSTOMER_ID}&quot; /&gt;&#xd;
	&lt;Payment&gt;&#xd;
		&lt;AmexTaa1&gt;1504861694 P 1 389.17&lt;/AmexTaa1&gt;&#xd;
		&lt;AmexTaa2&gt;WV1502022906&lt;/AmexTaa2&gt;&#xd;
		&lt;AmexTaa3&gt;Winchester, VA Salt Lake City, UT&lt;/AmexTaa3&gt;&#xd;
		&lt;AmexTaa4&gt;10-10-2014 PP874518 PP874518&lt;/AmexTaa4&gt;&#xd;
		&lt;Amount&gt;389.17&lt;/Amount&gt;&#xd;
		&lt;CapturePurchaseLevel&gt;3&lt;/CapturePurchaseLevel&gt;&#xd;
		&lt;CreditPurchaseLevel&gt;3&lt;/CreditPurchaseLevel&gt;&#xd;
		&lt;CustomDataFields&gt;&#xd;
			&lt;CustomDataField&gt;&#xd;
				&lt;Name&gt;Invoice Date&lt;/Name&gt;&#xd;
				&lt;Value&gt;2014-10-28T06:17:53.848Z&lt;/Value&gt;&#xd;
			&lt;/CustomDataField&gt;&#xd;
			&lt;CustomDataField&gt;&#xd;
				&lt;Name&gt;Invoice Due Date&lt;/Name&gt;&#xd;
				&lt;Value&gt;2014-10-28T06:17:53.848Z&lt;/Value&gt;&#xd;
			&lt;/CustomDataField&gt;&#xd;
			&lt;CustomDataField&gt;&#xd;
				&lt;Name&gt;EBPPBatchID&lt;/Name&gt;&#xd;
				&lt;Value&gt;55&lt;/Value&gt;&#xd;
			&lt;/CustomDataField&gt;&#xd;
			&lt;CustomDataField&gt;&#xd;
				&lt;Name&gt;Channel&lt;/Name&gt;&#xd;
				&lt;Value&gt;PrintPost&lt;/Value&gt;&#xd;
			&lt;/CustomDataField&gt;&#xd;
			&lt;CustomDataField&gt;&#xd;
				&lt;Name&gt;EBPPUserName&lt;/Name&gt;&#xd;
				&lt;Value&gt;john.doe@gmail.com&lt;/Value&gt;&#xd;
			&lt;/CustomDataField&gt;&#xd;
			&lt;CustomDataField&gt;&#xd;
				&lt;Name&gt;FirstName&lt;/Name&gt;&#xd;
				&lt;Value&gt;John&lt;/Value&gt;&#xd;
			&lt;/CustomDataField&gt;&#xd;
			&lt;CustomDataField&gt;&#xd;
				&lt;Name&gt;LastName&lt;/Name&gt;&#xd;
				&lt;Value&gt;Doe&lt;/Value&gt;&#xd;
			&lt;/CustomDataField&gt;&#xd;
			&lt;CustomDataField&gt;&#xd;
				&lt;Name&gt;DHLAdmin&lt;/Name&gt;&#xd;
				&lt;Value&gt;&lt;/Value&gt;&#xd;
			&lt;/CustomDataField&gt;&#xd;
			&lt;CustomDataField&gt;&#xd;
				&lt;Name&gt;AirWayBillNumbers&lt;/Name&gt;&#xd;
				&lt;Value&gt;1504861694&lt;/Value&gt;&#xd;
			&lt;/CustomDataField&gt;&#xd;
		&lt;/CustomDataFields&gt;&#xd;
		&lt;CustomerReferenceNumber&gt;WV1502022906&lt;/CustomerReferenceNumber&gt;&#xd;
		&lt;DestinationCountryCode&gt;USA&lt;/DestinationCountryCode&gt;&#xd;
		&lt;DestinationPostalCode&gt;84101&lt;/DestinationPostalCode&gt;&#xd;
		&lt;FreightAmount&gt;389.17&lt;/FreightAmount&gt;&#xd;
		&lt;GrandTotalAmount&gt;389.17&lt;/GrandTotalAmount&gt;&#xd;
		&lt;InvoiceNumber&gt;14958660&lt;/InvoiceNumber&gt;&#xd;
		&lt;OrderNumber&gt;14958660&lt;/OrderNumber&gt;&#xd;
		&lt;PaymentLvl3Items&gt;&#xd;
			&lt;PaymentLvl3Item&gt;&#xd;
				&lt;CommodityCode&gt;35184&lt;/CommodityCode&gt;&#xd;
				&lt;ProductDescription&gt;1504861694&lt;/ProductDescription&gt;&#xd;
				&lt;ProductCode&gt;P&lt;/ProductCode&gt;&#xd;
				&lt;Qty&gt;1&lt;/Qty&gt;&#xd;
				&lt;UnitOfMeasure&gt;LBS&lt;/UnitOfMeasure&gt;&#xd;
				&lt;UnitPrice&gt;389.17&lt;/UnitPrice&gt;&#xd;
				&lt;DiscountAmount&gt;0.00&lt;/DiscountAmount&gt;&#xd;
				&lt;DiscountIndicator&gt;N&lt;/DiscountIndicator&gt;&#xd;
				&lt;DiscountRate&gt;0.0&lt;/DiscountRate&gt;&#xd;
				&lt;GrossNetIndicator&gt;G&lt;/GrossNetIndicator&gt;&#xd;
				&lt;ItemReferenceNumber&gt;1504861694&lt;/ItemReferenceNumber&gt;&#xd;
				&lt;TaxAmount&gt;0.00&lt;/TaxAmount&gt;&#xd;
				&lt;TaxRate&gt;0.0&lt;/TaxRate&gt;&#xd;
				&lt;TaxTypeApplied&gt;State&lt;/TaxTypeApplied&gt;&#xd;
				&lt;Amount&gt;389.17&lt;/Amount&gt;&#xd;
			&lt;/PaymentLvl3Item&gt;&#xd;
		&lt;/PaymentLvl3Items&gt;&#xd;
		&lt;PoNumber&gt;WV1502022906&lt;/PoNumber&gt;&#xd;
		&lt;ShipFromPostalCode&gt;22602&lt;/ShipFromPostalCode&gt;&#xd;
		&lt;TaxRate&gt;0.17&lt;/TaxRate&gt;&#xd;
	&lt;/Payment&gt;&#xd;
&lt;/CustomerAccountPayment&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/cap</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <objProp>
          <name></name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <objProp>
          <name></name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <objProp>
          <name></name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <objProp>
          <name></name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Test Library" enabled="true">
        <stringProp name="TestPlan.comments">Contains controllers with actions to be interspersed in the test using Module Controllers</stringProp>
      </TestFragmentController>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Enumerations Using &lt;Login&gt;" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST(GET) enumerations" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;Login xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
&lt;UserName&gt;hamerchant&lt;/UserName&gt;&#xd;
&lt;Password&gt;pass1&lt;/Password&gt;&#xd;
&lt;/Login&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sbps/api/enumerations</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-HTTP-Method-Override</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Payment Accounts" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET paymentaccounts" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sbps/api/paymentaccounts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-TT-APIKEY" elementType="Header">
                  <stringProp name="Header.name">X-TT-APIKEY</stringProp>
                  <stringProp name="Header.value">${API_KEY}</stringProp>
                </elementProp>
                <elementProp name="X-TT-SESSIONTOKEN" elementType="Header">
                  <stringProp name="Header.name">X-TT-SESSIONTOKEN</stringProp>
                  <stringProp name="Header.value">${SESSION_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Processing Accounts" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET processingaccounts" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sbps/api/processingaccounts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-TT-APIKEY" elementType="Header">
                  <stringProp name="Header.name">X-TT-APIKEY</stringProp>
                  <stringProp name="Header.value">${API_KEY}</stringProp>
                </elementProp>
                <elementProp name="X-TT-SESSIONTOKEN" elementType="Header">
                  <stringProp name="Header.name">X-TT-SESSIONTOKEN</stringProp>
                  <stringProp name="Header.value">${SESSION_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Credit Card Payment Accounts" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET creditcardpaymentaccounts" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sbps/api/creditcardpaymentaccounts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-TT-APIKEY" elementType="Header">
                  <stringProp name="Header.name">X-TT-APIKEY</stringProp>
                  <stringProp name="Header.value">${API_KEY}</stringProp>
                </elementProp>
                <elementProp name="X-TT-SESSIONTOKEN" elementType="Header">
                  <stringProp name="Header.name">X-TT-SESSIONTOKEN</stringProp>
                  <stringProp name="Header.value">${SESSION_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">CREDIT_CARD_PAYMENT_ACCOUNT_ID</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;CreditCardPaymentAccount id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET creditcardpaymentaccount" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sbps/api/creditcardpaymentaccount/${__urlencode(${CREDIT_CARD_PAYMENT_ACCOUNT_ID})}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-TT-APIKEY</stringProp>
                  <stringProp name="Header.value">${API_KEY}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-TT-SESSIONTOKEN</stringProp>
                  <stringProp name="Header.value">${SESSION_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ACH Payment Accounts" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET customers" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sbps/api/customers</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-TT-APIKEY" elementType="Header">
                  <stringProp name="Header.name">X-TT-APIKEY</stringProp>
                  <stringProp name="Header.value">${API_KEY}</stringProp>
                </elementProp>
                <elementProp name="X-TT-SESSIONTOKEN" elementType="Header">
                  <stringProp name="Header.name">X-TT-SESSIONTOKEN</stringProp>
                  <stringProp name="Header.value">${SESSION_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">CUSTOMER_ID</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;Customer id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET achpaymentaccounts" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sbps/api/achpaymentaccounts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-TT-APIKEY" elementType="Header">
                  <stringProp name="Header.name">X-TT-APIKEY</stringProp>
                  <stringProp name="Header.value">${API_KEY}</stringProp>
                </elementProp>
                <elementProp name="X-TT-SESSIONTOKEN" elementType="Header">
                  <stringProp name="Header.name">X-TT-SESSIONTOKEN</stringProp>
                  <stringProp name="Header.value">${SESSION_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">ACH_PAYMENT_ACCOUNT_ID</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;AchPaymentAccount id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET achpaymentaccount" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sbps/api/achpaymentaccount/${__urlencode(${ACH_PAYMENT_ACCOUNT_ID})}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-TT-APIKEY</stringProp>
                  <stringProp name="Header.value">${API_KEY}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-TT-SESSIONTOKEN</stringProp>
                  <stringProp name="Header.value">${SESSION_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST achpaymentaccount" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;t3ap:AchPaymentAccount xmlns:t3ap=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
&lt;t3ap:RoutingNumber&gt;011000015&lt;/t3ap:RoutingNumber&gt;&lt;t3ap:AccountNumber&gt;12345&lt;/t3ap:AccountNumber&gt;&lt;t3ap:Name&gt;Checking&lt;/t3ap:Name&gt;&lt;t3ap:NameOnAccount&gt;Checking ABC&lt;/t3ap:NameOnAccount&gt;&#xd;
&lt;t3ap:IsDefault&gt;false&lt;/t3ap:IsDefault&gt;&lt;t3ap:ExternalId&gt;123dqwasd2&lt;/t3ap:ExternalId&gt;&lt;t3ap:AuditUserId&gt;12345&lt;/t3ap:AuditUserId&gt;&lt;t3ap:Customer id=&apos;${CUSTOMER_ID}&apos;&gt;&#xd;
&lt;/t3ap:Customer&gt;&lt;t3ap:BankAccountType id=&apos;dqLMy4vnFqfTaK4of1W5DxK8Bk90XKlKBjH6+gzupdBfPvR83rIqak+KHtN+3s5FdCF0v3YL/Zk=&apos;&gt;&lt;/t3ap:BankAccountType&gt;&lt;/t3ap:AchPaymentAccount&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sbps/api/achpaymentaccount</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-TT-APIKEY</stringProp>
                  <stringProp name="Header.value">${API_KEY}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-TT-SESSIONTOKEN</stringProp>
                  <stringProp name="Header.value">${SESSION_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">NEW_ACH_PAYMENT_ACCOUNT_ID</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;AchPaymentAccount id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT achpaymentaccount" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;t3ap:AchPaymentAccount id=&quot;${NEW_ACH_PAYMENT_ACCOUNT_ID}&quot; xmlns:t3ap=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
&lt;t3ap:RoutingNumber&gt;011000015&lt;/t3ap:RoutingNumber&gt;&lt;t3ap:AccountNumber&gt;12345&lt;/t3ap:AccountNumber&gt;&lt;t3ap:Name&gt;Checking&lt;/t3ap:Name&gt;&lt;t3ap:NameOnAccount&gt;Checking XYZ&lt;/t3ap:NameOnAccount&gt;&#xd;
&lt;t3ap:IsDefault&gt;false&lt;/t3ap:IsDefault&gt;&lt;t3ap:ExternalId&gt;123dqwasd2&lt;/t3ap:ExternalId&gt;&lt;t3ap:AuditUserId&gt;12345&lt;/t3ap:AuditUserId&gt;&lt;t3ap:Customer id=&apos;${CUSTOMER_ID}&apos;&gt;&#xd;
&lt;/t3ap:Customer&gt;&lt;t3ap:BankAccountType id=&apos;dqLMy4vnFqfTaK4of1W5DxK8Bk90XKlKBjH6+gzupdBfPvR83rIqak+KHtN+3s5FdCF0v3YL/Zk=&apos;&gt;&lt;/t3ap:BankAccountType&gt;&lt;/t3ap:AchPaymentAccount&gt;&#xd;
 </stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sbps/api/achpaymentaccount</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-TT-APIKEY</stringProp>
                  <stringProp name="Header.value">${API_KEY}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-TT-SESSIONTOKEN</stringProp>
                  <stringProp name="Header.value">${SESSION_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE achpaymentaccount" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sbps/api/achpaymentaccount/${__urlencode(${NEW_ACH_PAYMENT_ACCOUNT_ID})}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-TT-APIKEY</stringProp>
                  <stringProp name="Header.value">${API_KEY}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-TT-SESSIONTOKEN</stringProp>
                  <stringProp name="Header.value">${SESSION_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Customers" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET customers" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sbps/api/customers/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-TT-APIKEY</stringProp>
                  <stringProp name="Header.value">${API_KEY}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-TT-SESSIONTOKEN</stringProp>
                  <stringProp name="Header.value">${SESSION_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">CUSTOMER_ID</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;Customer id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET customer" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sbps/api/customer/${__urlencode(${CUSTOMER_ID})}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-TT-APIKEY</stringProp>
                  <stringProp name="Header.value">${API_KEY}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-TT-SESSIONTOKEN</stringProp>
                  <stringProp name="Header.value">${SESSION_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Credit Card Transactions" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET creditcardpayments" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayments</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-TT-APIKEY" elementType="Header">
                  <stringProp name="Header.name">X-TT-APIKEY</stringProp>
                  <stringProp name="Header.value">${API_KEY}</stringProp>
                </elementProp>
                <elementProp name="X-TT-SESSIONTOKEN" elementType="Header">
                  <stringProp name="Header.name">X-TT-SESSIONTOKEN</stringProp>
                  <stringProp name="Header.value">${SESSION_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">CREDIT_CARD_PAYMENT_ID</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;CreditCardPayment id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET creditcardpayment" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sbps/api/creditcardpayment/${__urlencode(${CREDIT_CARD_PAYMENT_ID})}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-TT-APIKEY</stringProp>
                  <stringProp name="Header.value">${API_KEY}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-TT-SESSIONTOKEN</stringProp>
                  <stringProp name="Header.value">${SESSION_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Ach Payments" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET achpayments" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sbps/api/achpayments</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-TT-APIKEY" elementType="Header">
                  <stringProp name="Header.name">X-TT-APIKEY</stringProp>
                  <stringProp name="Header.value">${API_KEY}</stringProp>
                </elementProp>
                <elementProp name="X-TT-SESSIONTOKEN" elementType="Header">
                  <stringProp name="Header.name">X-TT-SESSIONTOKEN</stringProp>
                  <stringProp name="Header.value">${SESSION_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">ACH_PAYMENT_ID</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;AchPayment id=&quot;(.*)&quot; href=&quot;.*&quot;&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET achpayment" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sbps/api/achpayment/${__urlencode(${ACH_PAYMENT_ID})}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-TT-APIKEY</stringProp>
                  <stringProp name="Header.value">${API_KEY}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-TT-SESSIONTOKEN</stringProp>
                  <stringProp name="Header.value">${SESSION_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CAP" enabled="true">
          <stringProp name="TestPlan.comments">Customer, Account, Payment</stringProp>
        </GenericController>
        <hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Conditionally Get a CREDIT_CARD_PAYMENT_ID" enabled="true">
            <stringProp name="IfController.condition">!(&quot;${CREDIT_CARD_PAYMENT_ID}&quot; == &quot;\${CREDIT_CARD_PAYMENT_ID}&quot; )</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="764597751">Test Plan</stringProp>
                <stringProp name="-1714733267">Test Library</stringProp>
                <stringProp name="-477457634">Credit Card Transactions</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET Credit Card Cap" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/cap/${__urlencode(${CREDIT_CARD_PAYMENT_ID})}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Customer Account Payment</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-TT-APIKEY" elementType="Header">
                    <stringProp name="Header.name">X-TT-APIKEY</stringProp>
                    <stringProp name="Header.value">${API_KEY}</stringProp>
                  </elementProp>
                  <elementProp name="X-TT-SESSIONTOKEN" elementType="Header">
                    <stringProp name="Header.name">X-TT-SESSIONTOKEN</stringProp>
                    <stringProp name="Header.value">${SESSION_TOKEN}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Conditionally Get an ACH_PAYMENT_ID" enabled="true">
            <stringProp name="IfController.condition">&quot;${ACH_PAYMENT_ID}&quot; == &quot;\${ACH_PAYMENT_ID}&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="764597751">Test Plan</stringProp>
                <stringProp name="-1714733267">Test Library</stringProp>
                <stringProp name="-1523292729">Ach Payments</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Create Enrollment And Token" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Processing Accounts And Enroll Using &lt;Login&gt;" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST(GET) processingaccounts" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;Login xmlns=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
&lt;UserName&gt;hamerchant&lt;/UserName&gt;&#xd;
&lt;Password&gt;pass1&lt;/Password&gt;&#xd;
&lt;/Login&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/processingaccounts?expand=status,organizationtype</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">PROCESSING_ACCOUNT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">id=&quot;([^&quot;]*)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
                <stringProp name="Scope.variable">PROCESSING_ACCOUNT_ID</stringProp>
              </RegexExtractor>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">X-HTTP-Method-Override</stringProp>
                    <stringProp name="Header.value">GET</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="RegexExtractor.refname">SESSION_TOKEN</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;SessionToken&gt;(.*)&lt;/SessionToken&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
              <boolProp name="displayJMeterProperties">true</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST enroll" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;t3ap:EnrollRequest xmlns:t3ap=&quot;http://www.fundtech.com/t3applicationmedia-v1&quot;&gt;&#xd;
    &lt;t3ap:UserName&gt;hamerchant&lt;/t3ap:UserName&gt;&#xd;
    &lt;t3ap:Password&gt;pass1&lt;/t3ap:Password&gt;&#xd;
    &lt;t3ap:ApiKeyName&gt;${TestingApiKeyName}&lt;/t3ap:ApiKeyName&gt;&#xd;
    &lt;t3ap:ProcessingAccountId&gt;${PROCESSING_ACCOUNT_ID}&lt;/t3ap:ProcessingAccountId&gt;&#xd;
&lt;/t3ap:EnrollRequest&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sbps/api/enroll</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
                <stringProp name="RegexExtractor.refname">API_KEY</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;ApiKey&gt;(.*)&lt;/ApiKey&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="Scope.variable">API_KEY</stringProp>
              </RegexExtractor>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                <boolProp name="displayJMeterProperties">true</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">true</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                <boolProp name="displayJMeterProperties">true</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">true</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET token" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sbps/api/token</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Token is usually retrieved from Enroll</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-TT-APIKEY</stringProp>
                  <stringProp name="Header.value">${API_KEY}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/vnd.fundtech.t3-v1+xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">SESSION_TOKEN</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;SessionToken\&gt;(.*)&lt;/SessionToken&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOT FOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
